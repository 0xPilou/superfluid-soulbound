/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Store, StoreInterface } from "../Store";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "Redeemed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "UpdatedInventory",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_quantity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "addItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "items",
    outputs: [
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_quantity",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "setToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610c4d8061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100eb578063bfb231d214610109578063f2fde38b1461013a578063fc0c546a1461015657610088565b8063144fa6d71461008d578063715018a6146100a9578063798a712a146100b35780637cbc2373146100cf575b600080fd5b6100a760048036038101906100a291906106e7565b610174565b005b6100b161022f565b005b6100cd60048036038101906100c8919061074a565b610243565b005b6100e960048036038101906100e4919061079d565b6102d3565b005b6100f361042a565b60405161010091906107ec565b60405180910390f35b610123600480360381019061011e9190610807565b610453565b604051610131929190610843565b60405180910390f35b610154600480360381019061014f91906106e7565b610477565b005b61015e6104fa565b60405161016b91906107ec565b60405180910390f35b61017c610520565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e2906108c9565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610237610520565b610241600061059e565b565b61024b610520565b61025361066a565b8281600001818152505081816020018181525050806002600086815260200190815260200160002060008201518160000155602082015181600101559050507fba08610eb630e5169cc45f7cb0aff657b7ef15d0ea7410ad15f239b7c7640b0a8484846040516102c5939291906108e9565b60405180910390a150505050565b60006002600084815260200190815260200160002090508181600001541015610331576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103289061096c565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166344d171873383600101548561038091906109bb565b6040518363ffffffff1660e01b815260040161039d929190610a72565b600060405180830381600087803b1580156103b757600080fd5b505af11580156103cb573d6000803e3d6000fd5b50505050818160000160008282546103e39190610aae565b925050819055507ff3a670cd3af7d64b488926880889d08a8585a138ff455227af6737339a1ec26233848460405161041d93929190610ae2565b60405180910390a1505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60026020528060005260406000206000915090508060000154908060010154905082565b61047f610520565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e590610b8b565b60405180910390fd5b6104f78161059e565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610528610662565b73ffffffffffffffffffffffffffffffffffffffff1661054661042a565b73ffffffffffffffffffffffffffffffffffffffff161461059c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059390610bf7565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b604051806040016040528060008152602001600081525090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106b482610689565b9050919050565b6106c4816106a9565b81146106cf57600080fd5b50565b6000813590506106e1816106bb565b92915050565b6000602082840312156106fd576106fc610684565b5b600061070b848285016106d2565b91505092915050565b6000819050919050565b61072781610714565b811461073257600080fd5b50565b6000813590506107448161071e565b92915050565b60008060006060848603121561076357610762610684565b5b600061077186828701610735565b935050602061078286828701610735565b925050604061079386828701610735565b9150509250925092565b600080604083850312156107b4576107b3610684565b5b60006107c285828601610735565b92505060206107d385828601610735565b9150509250929050565b6107e6816106a9565b82525050565b600060208201905061080160008301846107dd565b92915050565b60006020828403121561081d5761081c610684565b5b600061082b84828501610735565b91505092915050565b61083d81610714565b82525050565b60006040820190506108586000830185610834565b6108656020830184610834565b9392505050565b600082825260208201905092915050565b7f7a65726f20616464726573730000000000000000000000000000000000000000600082015250565b60006108b3600c8361086c565b91506108be8261087d565b602082019050919050565b600060208201905081810360008301526108e2816108a6565b9050919050565b60006060820190506108fe6000830186610834565b61090b6020830185610834565b6109186040830184610834565b949350505050565b7f4f7574204f662053746f636b0000000000000000000000000000000000000000600082015250565b6000610956600c8361086c565b915061096182610920565b602082019050919050565b6000602082019050818103600083015261098581610949565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109c682610714565b91506109d183610714565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610a0a57610a0961098c565b5b828202905092915050565b600082825260208201905092915050565b7f3078000000000000000000000000000000000000000000000000000000000000600082015250565b6000610a5c600283610a15565b9150610a6782610a26565b602082019050919050565b6000606082019050610a8760008301856107dd565b610a946020830184610834565b8181036040830152610aa581610a4f565b90509392505050565b6000610ab982610714565b9150610ac483610714565b925082821015610ad757610ad661098c565b5b828203905092915050565b6000606082019050610af760008301866107dd565b610b046020830185610834565b610b116040830184610834565b949350505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610b7560268361086c565b9150610b8082610b19565b604082019050919050565b60006020820190508181036000830152610ba481610b68565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610be160208361086c565b9150610bec82610bab565b602082019050919050565b60006020820190508181036000830152610c1081610bd4565b905091905056fea2646970667358221220a6f1214c992176c6215e30787b23b3fef3c5affa8beaf229a48034a18335bb1e64736f6c634300080e0033";

type StoreConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StoreConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Store__factory extends ContractFactory {
  constructor(...args: StoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Store";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Store> {
    return super.deploy(overrides || {}) as Promise<Store>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Store {
    return super.attach(address) as Store;
  }
  connect(signer: Signer): Store__factory {
    return super.connect(signer) as Store__factory;
  }
  static readonly contractName: "Store";
  public readonly contractName: "Store";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StoreInterface {
    return new utils.Interface(_abi) as StoreInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Store {
    return new Contract(address, _abi, signerOrProvider) as Store;
  }
}
