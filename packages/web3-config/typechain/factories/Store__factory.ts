/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Store, StoreInterface } from "../Store";

const _abi = [
  {
    inputs: [],
    name: "IncorrectItem",
    type: "error",
  },
  {
    inputs: [],
    name: "OutOfStock",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "Redeemed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "UpdatedInventory",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_quantity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "addItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "items",
    outputs: [
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nbItems",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_quantity",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "setToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_quantity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "updateItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600060025534801561001557600080fd5b5061003261002761003760201b60201c565b61003f60201b60201c565b610103565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610d77806101126000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b1461011f578063a21252321461013d578063bfb231d214610159578063f2fde38b1461018a578063fc0c546a146101a65761009e565b8063144fa6d7146100a3578063539447d4146100bf578063715018a6146100db5780637cbc2373146100e55780637d73486314610101575b600080fd5b6100bd60048036038101906100b8919061081a565b6101c4565b005b6100d960048036038101906100d4919061087d565b61027f565b005b6100e361034a565b005b6100ff60048036038101906100fa91906108d0565b61035e565b005b6101096104ac565b604051610116919061091f565b60405180910390f35b6101276104b2565b6040516101349190610949565b60405180910390f35b610157600480360381019061015291906108d0565b6104db565b005b610173600480360381019061016e9190610964565b610586565b604051610181929190610991565b60405180910390f35b6101a4600480360381019061019f919061081a565b6105aa565b005b6101ae61062d565b6040516101bb9190610949565b60405180910390f35b6101cc610653565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361023b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023290610a17565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610287610653565b60025483106102c2576040517f6609430300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102ca61079d565b8281600001818152505081816020018181525050806003600086815260200190815260200160002060008201518160000155602082015181600101559050507fba08610eb630e5169cc45f7cb0aff657b7ef15d0ea7410ad15f239b7c7640b0a84848460405161033c93929190610a37565b60405180910390a150505050565b610352610653565b61035c60006106d1565b565b600060036000848152602001908152602001600020905081816000015410156103b3576040517fade1cb4100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166344d17187338360010154856104029190610a9d565b6040518363ffffffff1660e01b815260040161041f929190610b54565b600060405180830381600087803b15801561043957600080fd5b505af115801561044d573d6000803e3d6000fd5b50505050818160000160008282546104659190610b90565b925050819055507ff3a670cd3af7d64b488926880889d08a8585a138ff455227af6737339a1ec26233848460405161049f93929190610bc4565b60405180910390a1505050565b60025481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104e3610653565b6104eb61079d565b82816000018181525050818160200181815250508060036000600254815260200190815260200160002060008201518160000155602082015181600101559050507fba08610eb630e5169cc45f7cb0aff657b7ef15d0ea7410ad15f239b7c7640b0a600254848460405161056193929190610a37565b60405180910390a16002600081548092919061057c90610bfb565b9190505550505050565b60036020528060005260406000206000915090508060000154908060010154905082565b6105b2610653565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610621576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061890610cb5565b60405180910390fd5b61062a816106d1565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61065b610795565b73ffffffffffffffffffffffffffffffffffffffff166106796104b2565b73ffffffffffffffffffffffffffffffffffffffff16146106cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c690610d21565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b604051806040016040528060008152602001600081525090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107e7826107bc565b9050919050565b6107f7816107dc565b811461080257600080fd5b50565b600081359050610814816107ee565b92915050565b6000602082840312156108305761082f6107b7565b5b600061083e84828501610805565b91505092915050565b6000819050919050565b61085a81610847565b811461086557600080fd5b50565b60008135905061087781610851565b92915050565b600080600060608486031215610896576108956107b7565b5b60006108a486828701610868565b93505060206108b586828701610868565b92505060406108c686828701610868565b9150509250925092565b600080604083850312156108e7576108e66107b7565b5b60006108f585828601610868565b925050602061090685828601610868565b9150509250929050565b61091981610847565b82525050565b60006020820190506109346000830184610910565b92915050565b610943816107dc565b82525050565b600060208201905061095e600083018461093a565b92915050565b60006020828403121561097a576109796107b7565b5b600061098884828501610868565b91505092915050565b60006040820190506109a66000830185610910565b6109b36020830184610910565b9392505050565b600082825260208201905092915050565b7f7a65726f20616464726573730000000000000000000000000000000000000000600082015250565b6000610a01600c836109ba565b9150610a0c826109cb565b602082019050919050565b60006020820190508181036000830152610a30816109f4565b9050919050565b6000606082019050610a4c6000830186610910565b610a596020830185610910565b610a666040830184610910565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610aa882610847565b9150610ab383610847565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610aec57610aeb610a6e565b5b828202905092915050565b600082825260208201905092915050565b7f3078000000000000000000000000000000000000000000000000000000000000600082015250565b6000610b3e600283610af7565b9150610b4982610b08565b602082019050919050565b6000606082019050610b69600083018561093a565b610b766020830184610910565b8181036040830152610b8781610b31565b90509392505050565b6000610b9b82610847565b9150610ba683610847565b925082821015610bb957610bb8610a6e565b5b828203905092915050565b6000606082019050610bd9600083018661093a565b610be66020830185610910565b610bf36040830184610910565b949350505050565b6000610c0682610847565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c3857610c37610a6e565b5b600182019050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610c9f6026836109ba565b9150610caa82610c43565b604082019050919050565b60006020820190508181036000830152610cce81610c92565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610d0b6020836109ba565b9150610d1682610cd5565b602082019050919050565b60006020820190508181036000830152610d3a81610cfe565b905091905056fea26469706673582212205a2938fd17e5db837575efdf7d331f454aa92758220af5a50559372e5b00a6ed64736f6c634300080e0033";

type StoreConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StoreConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Store__factory extends ContractFactory {
  constructor(...args: StoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Store";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Store> {
    return super.deploy(overrides || {}) as Promise<Store>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Store {
    return super.attach(address) as Store;
  }
  connect(signer: Signer): Store__factory {
    return super.connect(signer) as Store__factory;
  }
  static readonly contractName: "Store";
  public readonly contractName: "Store";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StoreInterface {
    return new utils.Interface(_abi) as StoreInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Store {
    return new Contract(address, _abi, signerOrProvider) as Store;
  }
}
