/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ABStreamRoyalty,
  ABStreamRoyaltyInterface,
} from "../ABStreamRoyalty";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISuperfluid",
        name: "_host",
        type: "address",
      },
      {
        internalType: "contract ISuperToken",
        name: "_ETHx",
        type: "address",
      },
      {
        internalType: "address",
        name: "_relay",
        type: "address",
      },
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FORBIDDEN",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_PARAMETER",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "ETHx",
    outputs: [
      {
        internalType: "contract ISuperToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INDEX_ID",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperToken",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "afterAgreementCreated",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperToken",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "afterAgreementTerminated",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperToken",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "afterAgreementUpdated",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperToken",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "beforeAgreementCreated",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperToken",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "beforeAgreementTerminated",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperToken",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "beforeAgreementUpdated",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "subscriber",
        type: "address",
      },
    ],
    name: "deleteShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "distribute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getABRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getABRelay",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "idaV1",
    outputs: [
      {
        internalType: "contract ISuperfluid",
        name: "host",
        type: "address",
      },
      {
        internalType: "contract IInstantDistributionAgreementV1",
        name: "ida",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ABRegistry",
        type: "address",
      },
    ],
    name: "setABRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ABRelay",
        type: "address",
      },
    ],
    name: "setABRelay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int96",
        name: "_baseFlow",
        type: "int96",
      },
      {
        internalType: "uint256",
        name: "_dropId",
        type: "uint256",
      },
    ],
    name: "setBaseFlow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_previousReceiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "_newReceiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_dropId",
        type: "uint256",
      },
    ],
    name: "updateStream",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200161c3803806200161c8339810160408190526200003491620002e4565b6200003f3362000173565b600380546001600160a01b0319166001600160a01b03858116919091179091556040805180820182529186168083529051635b69006f60e11b81527f8aedc3b5d4bf031e11a7e2940f7251c005698405d58e02e1c247fed3b1b3a674600482015260208301919063b6d200de90602401602060405180830381865afa158015620000cd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000f391906200034c565b6001600160a01b039081169091528151600180546001600160a01b03199081169284169290921781556020938401516002805484169185169190911790556004805483168685161790556005805490921686841617909155600354620001699391921690600090620001c3811b620007eb17901c565b5050505062000514565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516000815260208101909152620001e390849084908490620001e8565b505050565b835460018501546040805160008152602081019091526001600160a01b03928316926339255d5b921690819063d787840a906200022d908990899060448101620003dd565b60408051808303601f1901815291815260208201805160e094851b6001600160e01b03909116179052519185901b6001600160e01b03191682526200027a93925090869060040162000418565b6000604051808303816000875af11580156200029a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620002c491908101906200045c565b5050505050565b6001600160a01b0381168114620002e157600080fd5b50565b60008060008060808587031215620002fb57600080fd5b84516200030881620002cb565b60208601519094506200031b81620002cb565b60408601519093506200032e81620002cb565b60608601519092506200034181620002cb565b939692955090935050565b6000602082840312156200035f57600080fd5b81516200036c81620002cb565b9392505050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620003a65781810151838201526020016200038c565b50506000910152565b60008151808452620003c981602086016020860162000389565b601f01601f19169290920160200192915050565b6001600160a01b038416815263ffffffff831660208201526060604082018190526000906200040f90830184620003af565b95945050505050565b6001600160a01b03841681526060602082018190526000906200043e90830185620003af565b8281036040840152620004528185620003af565b9695505050505050565b6000602082840312156200046f57600080fd5b81516001600160401b03808211156200048757600080fd5b818401915084601f8301126200049c57600080fd5b815181811115620004b157620004b162000373565b604051601f8201601f19908116603f01168101908382118183101715620004dc57620004dc62000373565b81604052828152876020848701011115620004f657600080fd5b6200050983602083016020880162000389565b979650505050505050565b6110f880620005246000396000f3fe608060405234801561001057600080fd5b50600436106100fc5760003560e01c80631cc8ca99146101015780632268cacb14610140578063230dbd291461015557806330d9c91514610175578063434479461461018857806353c11f991461019b578063581b73a5146101ae5780635f9e7d77146101d3578063715018a6146101e6578063884d1f40146101ee5780638c7f0959146102015780638da5cb5b1461021e57806391a84c601461022657806391c05b0b14610239578063b1ec46f81461024c578063b3624a3b1461025d578063d86ed3e514610270578063f2fde38b14610283578063f6c278c114610296578063fa51453f146102a9575b600080fd5b60015460025461011b916001600160a01b03908116911682565b604080516001600160a01b039384168152929091166020830152015b60405180910390f35b61015361014e366004610bb2565b6102bc565b005b610168610163366004610c1e565b6102db565b6040516101379190610d38565b610168610183366004610d4b565b610330565b610153610196366004610de9565b610381565b6101686101a9366004610c1e565b6103b1565b6004546001600160a01b03165b6040516001600160a01b039091168152602001610137565b6101686101e1366004610d4b565b610404565b61015361046b565b6101686101fc366004610d4b565b61047f565b610209600081565b60405163ffffffff9091168152602001610137565b6101bb6104d0565b610153610234366004610e2a565b6104df565b610153610247366004610e5c565b61055c565b6005546001600160a01b03166101bb565b61015361026b366004610bb2565b610683565b61016861027e366004610c1e565b6106d4565b610153610291366004610bb2565b610724565b6003546101bb906001600160a01b031681565b6101536102b7366004610bb2565b61079a565b6003546102d8906001906001600160a01b031630600085610809565b50565b60405162461bcd60e51b815260206004820152602e60248201526000805160206110a383398151915260448201526d19595b595b9d08155c19185d195960921b60648201526060906084015b60405180910390fd5b60405162461bcd60e51b815260206004820152602f602482015260008051602061108383398151915260448201526e1c99595b595b9d0810dc99585d1959608a1b6064820152606090608401610327565b6005546001600160a01b031633146103ac5760405163036be76f60e61b815260040160405180910390fd5b505050565b60405162461bcd60e51b815260206004820152603160248201526000805160206110a383398151915260448201527019595b595b9d0815195c9b5a5b985d1959607a1b6064820152606090608401610327565b60405162461bcd60e51b815260206004820152603360248201527f556e737570706f727465642063616c6c6261636b202d20204265666f7265204160448201527219dc99595b595b9d0815195c9b5a5b985d1959606a1b6064820152606090608401610327565b610473610832565b61047d6000610891565b565b60405162461bcd60e51b815260206004820152602f602482015260008051602061108383398151915260448201526e1c99595b595b9d081d5c19185d1959608a1b6064820152606090608401610327565b6000546001600160a01b031690565b6005546001600160a01b0316331461050a5760405163036be76f60e61b815260040160405180910390fd5b600082600b0b1361052e57604051632627b42d60e11b815260040160405180910390fd5b600090815260066020526040902080546001600160601b0319166001600160601b0392909216919091179055565b6003546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156105b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d79190610e75565b50600254600354604051632266eabb60e21b81526001600160a01b0391821660048201523060248201526000604482018190526064820185905292919091169063899baaec906084016040805180830381865afa15801561063c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106609190610e97565b5060035490915061067f906001906001600160a01b03166000846108e1565b5050565b61068b610832565b6001600160a01b0381166106b257604051632627b42d60e11b815260040160405180910390fd5b600580546001600160a01b0319166001600160a01b0392909216919091179055565b60405162461bcd60e51b815260206004820152602e60248201526000805160206110a383398151915260448201526d19595b595b9d0810dc99585d195960921b6064820152606090608401610327565b61072c610832565b6001600160a01b0381166107915760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610327565b6102d881610891565b6107a2610832565b6001600160a01b0381166107c957604051632627b42d60e11b815260040160405180910390fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6040805160008152602081019091526103ac90849084908490610907565b60408051600081526020810190915261082b90869086908690869086906109dc565b5050505050565b3361083b6104d0565b6001600160a01b03161461047d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610327565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516000815260208101909152610901908590859085908590610abe565b50505050565b835460018501546040805160008152602081019091526001600160a01b03928316926339255d5b921690819063d787840a9061094a908990899060448101610eea565b60408051808303601f1901815291815260208201805160e094851b6001600160e01b03909116179052519185901b6001600160e01b0319168252610995939250908690600401610f23565b6000604051808303816000875af11580156109b4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261082b9190810190610f63565b855460018701546040805160008152602081019091526001600160a01b03928316926339255d5b9216908190632e5e74c690610a23908b908b908b908b906044810161100f565b60408051808303601f1901815291815260208201805160e094851b6001600160e01b03909116179052519185901b6001600160e01b0319168252610a6e939250908690600401610f23565b6000604051808303816000875af1158015610a8d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ab59190810190610f63565b50505050505050565b845460018601546040805160008152602081019091526001600160a01b03928316926339255d5b921690819063b96731c290610b03908a908a908a906044810161104f565b60408051808303601f1901815291815260208201805160e094851b6001600160e01b03909116179052519185901b6001600160e01b0319168252610b4e939250908690600401610f23565b6000604051808303816000875af1158015610b6d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b959190810190610f63565b505050505050565b6001600160a01b03811681146102d857600080fd5b600060208284031215610bc457600080fd5b8135610bcf81610b9d565b9392505050565b60008083601f840112610be857600080fd5b5081356001600160401b03811115610bff57600080fd5b602083019150836020828501011115610c1757600080fd5b9250929050565b600080600080600080600080600060c08a8c031215610c3c57600080fd5b8935610c4781610b9d565b985060208a0135610c5781610b9d565b975060408a0135965060608a01356001600160401b0380821115610c7a57600080fd5b610c868d838e01610bd6565b909850965060808c0135915080821115610c9f57600080fd5b610cab8d838e01610bd6565b909650945060a08c0135915080821115610cc457600080fd5b50610cd18c828d01610bd6565b915080935050809150509295985092959850929598565b60005b83811015610d03578181015183820152602001610ceb565b50506000910152565b60008151808452610d24816020860160208601610ce8565b601f01601f19169290920160200192915050565b602081526000610bcf6020830184610d0c565b600080600080600080600060a0888a031215610d6657600080fd5b8735610d7181610b9d565b96506020880135610d8181610b9d565b95506040880135945060608801356001600160401b0380821115610da457600080fd5b610db08b838c01610bd6565b909650945060808a0135915080821115610dc957600080fd5b50610dd68a828b01610bd6565b989b979a50959850939692959293505050565b600080600060608486031215610dfe57600080fd5b8335610e0981610b9d565b92506020840135610e1981610b9d565b929592945050506040919091013590565b60008060408385031215610e3d57600080fd5b823580600b0b8114610e4e57600080fd5b946020939093013593505050565b600060208284031215610e6e57600080fd5b5035919050565b600060208284031215610e8757600080fd5b81518015158114610bcf57600080fd5b60008060408385031215610eaa57600080fd5b825160208401519092506001600160801b0381168114610ec957600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038416815263ffffffff83166020820152606060408201819052600090610f1a90830184610d0c565b95945050505050565b6001600160a01b0384168152606060208201819052600090610f4790830185610d0c565b8281036040840152610f598185610d0c565b9695505050505050565b600060208284031215610f7557600080fd5b81516001600160401b0380821115610f8c57600080fd5b818401915084601f830112610fa057600080fd5b815181811115610fb257610fb2610ed4565b604051601f8201601f19908116603f01168101908382118183101715610fda57610fda610ed4565b81604052828152876020848701011115610ff357600080fd5b611004836020830160208801610ce8565b979650505050505050565b6001600160a01b038681168252858116602083015263ffffffff851660408301528316606082015260a06080820181905260009061100490830184610d0c565b60018060a01b038516815263ffffffff84166020820152826040820152608060608201526000610f596080830184610d0c56fe556e737570706f727465642063616c6c6261636b202d204265666f7265204167556e737570706f727465642063616c6c6261636b202d20416674657220416772a26469706673582212206bde53b69f870f9be9b056614c453dff06d6fa532c4dd28875dd837ff9fa970d64736f6c63430008100033";

type ABStreamRoyaltyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ABStreamRoyaltyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ABStreamRoyalty__factory extends ContractFactory {
  constructor(...args: ABStreamRoyaltyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ABStreamRoyalty";
  }

  deploy(
    _host: string,
    _ETHx: string,
    _relay: string,
    _registry: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ABStreamRoyalty> {
    return super.deploy(
      _host,
      _ETHx,
      _relay,
      _registry,
      overrides || {}
    ) as Promise<ABStreamRoyalty>;
  }
  getDeployTransaction(
    _host: string,
    _ETHx: string,
    _relay: string,
    _registry: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _host,
      _ETHx,
      _relay,
      _registry,
      overrides || {}
    );
  }
  attach(address: string): ABStreamRoyalty {
    return super.attach(address) as ABStreamRoyalty;
  }
  connect(signer: Signer): ABStreamRoyalty__factory {
    return super.connect(signer) as ABStreamRoyalty__factory;
  }
  static readonly contractName: "ABStreamRoyalty";
  public readonly contractName: "ABStreamRoyalty";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ABStreamRoyaltyInterface {
    return new utils.Interface(_abi) as ABStreamRoyaltyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ABStreamRoyalty {
    return new Contract(address, _abi, signerOrProvider) as ABStreamRoyalty;
  }
}
