/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SuperSoulbound,
  SuperSoulboundInterface,
} from "../SuperSoulbound";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_store",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Initialized",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "BURNER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINTER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_userData",
        type: "bytes",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "initialAddress",
        type: "address",
      },
    ],
    name: "initializeProxy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_userData",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_store",
        type: "address",
      },
    ],
    name: "setStore",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "store",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001e4d38038062001e4d8339818101604052810190620000379190620002c7565b80602160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200008d6000801b33620000f860201b60201c565b620000bf7ff0887ba65ee2024ea881d91b74c2450ef19e1557f03bed3ea9f16b037cbe2dc933620000f860201b60201c565b620000f17f9667e80708b6eeeb0053fa0cca44e028ff548e2a9f029edfeac87c118b08b7c882620000f860201b60201c565b50620002f9565b6200010a8282620001ea60201b60201c565b620001e65760016020600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506200018b6200025560201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b60006020600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200028f8262000262565b9050919050565b620002a18162000282565b8114620002ad57600080fd5b50565b600081519050620002c18162000296565b92915050565b600060208284031215620002e057620002df6200025d565b5b6000620002f084828501620002b0565b91505092915050565b611b4480620003096000396000f3fe6080604052600436106100ec5760003560e01c806344d171871161008a578063975057e711610059578063975057e714610306578063a217fddf14610331578063d547741f1461035c578063fe6d812414610385576100fb565b806344d171871461024e5780634a0687ef1461027757806391d14854146102a057806394d008ef146102dd576100fb565b8063118c4f13116100c6578063118c4f1314610194578063248a9ca3146101bf5780632f2ff15d146101fc57806336568abe14610225576100fb565b806301ffc9a714610105578063077f224a14610142578063087cbd401461016b576100fb565b366100fb576100f96103b0565b005b6101036103b0565b005b34801561011157600080fd5b5061012c6004803603810190610127919061101d565b6103ca565b6040516101399190611065565b60405180910390f35b34801561014e57600080fd5b5061016960048036038101906101649190611224565b610444565b005b34801561017757600080fd5b50610192600480360381019061018d91906112af565b610454565b005b3480156101a057600080fd5b506101a961053f565b6040516101b691906112f5565b60405180910390f35b3480156101cb57600080fd5b506101e660048036038101906101e1919061133c565b610563565b6040516101f391906112f5565b60405180910390f35b34801561020857600080fd5b50610223600480360381019061021e9190611369565b610583565b005b34801561023157600080fd5b5061024c60048036038101906102479190611369565b6105a4565b005b34801561025a57600080fd5b5061027560048036038101906102709190611480565b610627565b005b34801561028357600080fd5b5061029e600480360381019061029991906112af565b610662565b005b3480156102ac57600080fd5b506102c760048036038101906102c29190611369565b61075b565b6040516102d49190611065565b60405180910390f35b3480156102e957600080fd5b5061030460048036038101906102ff9190611480565b6107c6565b005b34801561031257600080fd5b5061031b610801565b60405161032891906114fe565b60405180910390f35b34801561033d57600080fd5b50610346610827565b60405161035391906112f5565b60405180910390f35b34801561036857600080fd5b50610383600480360381019061037e9190611369565b61082e565b005b34801561039157600080fd5b5061039a61084f565b6040516103a791906112f5565b60405180910390f35b6103b8610873565b6103c86103c3610875565b61089e565b565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061043d575061043c826108c4565b5b9050919050565b61044f83838361092e565b505050565b6000801b61046181610a11565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c790611576565b60405180910390fd5b81602160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061053b7f9667e80708b6eeeb0053fa0cca44e028ff548e2a9f029edfeac87c118b08b7c883610a25565b5050565b7f9667e80708b6eeeb0053fa0cca44e028ff548e2a9f029edfeac87c118b08b7c881565b600060206000838152602001908152602001600020600101549050919050565b61058c82610563565b61059581610a11565b61059f8383610a25565b505050565b6105ac610b06565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610619576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061090611608565b60405180910390fd5b6106238282610b0e565b5050565b7f9667e80708b6eeeb0053fa0cca44e028ff548e2a9f029edfeac87c118b08b7c861065181610a11565b61065c848484610bf0565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106c8576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166106e8610875565b73ffffffffffffffffffffffffffffffffffffffff1614610735576040517f5daa87a000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5550565b60006020600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b7ff0887ba65ee2024ea881d91b74c2450ef19e1557f03bed3ea9f16b037cbe2dc96107f081610a11565b6107fb848484610c64565b50505050565b602160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000801b81565b61083782610563565b61084081610a11565b61084a8383610b0e565b505050565b7ff0887ba65ee2024ea881d91b74c2450ef19e1557f03bed3ea9f16b037cbe2dc981565b565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54905090565b3660008037600080366000845af43d6000803e80600081146108bf573d6000f35b3d6000fd5b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b8073ffffffffffffffffffffffffffffffffffffffff1663d412d344306040518263ffffffff1660e01b815260040161096791906114fe565b600060405180830381600087803b15801561098157600080fd5b505af1158015610995573d6000803e3d6000fd5b505050503073ffffffffffffffffffffffffffffffffffffffff166342fe09806000601286866040518563ffffffff1660e01b81526004016109da9493929190611746565b600060405180830381600087803b1580156109f457600080fd5b505af1158015610a08573d6000803e3d6000fd5b50505050505050565b610a2281610a1d610b06565b610cd8565b50565b610a2f828261075b565b610b025760016020600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610aa7610b06565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600033905090565b610b18828261075b565b15610bec5760006020600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610b91610b06565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b3073ffffffffffffffffffffffffffffffffffffffff16639d8767418484846040518463ffffffff1660e01b8152600401610c2d939291906117fd565b600060405180830381600087803b158015610c4757600080fd5b505af1158015610c5b573d6000803e3d6000fd5b50505050505050565b3073ffffffffffffffffffffffffffffffffffffffff1663c68d42838484846040518463ffffffff1660e01b8152600401610ca1939291906117fd565b600060405180830381600087803b158015610cbb57600080fd5b505af1158015610ccf573d6000803e3d6000fd5b50505050505050565b610ce2828261075b565b610d7157610d078173ffffffffffffffffffffffffffffffffffffffff166014610d75565b610d158360001c6020610d75565b604051602001610d2692919061190f565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d689190611949565b60405180910390fd5b5050565b606060006002836002610d88919061199a565b610d9291906119f4565b67ffffffffffffffff811115610dab57610daa61109b565b5b6040519080825280601f01601f191660200182016040528015610ddd5781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110610e1557610e14611a4a565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610e7957610e78611a4a565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002610eb9919061199a565b610ec391906119f4565b90505b6001811115610f63577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110610f0557610f04611a4a565b5b1a60f81b828281518110610f1c57610f1b611a4a565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080610f5c90611a79565b9050610ec6565b5060008414610fa7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9e90611aee565b60405180910390fd5b8091505092915050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610ffa81610fc5565b811461100557600080fd5b50565b60008135905061101781610ff1565b92915050565b60006020828403121561103357611032610fbb565b5b600061104184828501611008565b91505092915050565b60008115159050919050565b61105f8161104a565b82525050565b600060208201905061107a6000830184611056565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6110d38261108a565b810181811067ffffffffffffffff821117156110f2576110f161109b565b5b80604052505050565b6000611105610fb1565b905061111182826110ca565b919050565b600067ffffffffffffffff8211156111315761113061109b565b5b61113a8261108a565b9050602081019050919050565b82818337600083830152505050565b600061116961116484611116565b6110fb565b90508281526020810184848401111561118557611184611085565b5b611190848285611147565b509392505050565b600082601f8301126111ad576111ac611080565b5b81356111bd848260208601611156565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111f1826111c6565b9050919050565b611201816111e6565b811461120c57600080fd5b50565b60008135905061121e816111f8565b92915050565b60008060006060848603121561123d5761123c610fbb565b5b600084013567ffffffffffffffff81111561125b5761125a610fc0565b5b61126786828701611198565b935050602084013567ffffffffffffffff81111561128857611287610fc0565b5b61129486828701611198565b92505060406112a58682870161120f565b9150509250925092565b6000602082840312156112c5576112c4610fbb565b5b60006112d38482850161120f565b91505092915050565b6000819050919050565b6112ef816112dc565b82525050565b600060208201905061130a60008301846112e6565b92915050565b611319816112dc565b811461132457600080fd5b50565b60008135905061133681611310565b92915050565b60006020828403121561135257611351610fbb565b5b600061136084828501611327565b91505092915050565b600080604083850312156113805761137f610fbb565b5b600061138e85828601611327565b925050602061139f8582860161120f565b9150509250929050565b6000819050919050565b6113bc816113a9565b81146113c757600080fd5b50565b6000813590506113d9816113b3565b92915050565b600067ffffffffffffffff8211156113fa576113f961109b565b5b6114038261108a565b9050602081019050919050565b600061142361141e846113df565b6110fb565b90508281526020810184848401111561143f5761143e611085565b5b61144a848285611147565b509392505050565b600082601f83011261146757611466611080565b5b8135611477848260208601611410565b91505092915050565b60008060006060848603121561149957611498610fbb565b5b60006114a78682870161120f565b93505060206114b8868287016113ca565b925050604084013567ffffffffffffffff8111156114d9576114d8610fc0565b5b6114e586828701611452565b9150509250925092565b6114f8816111e6565b82525050565b600060208201905061151360008301846114ef565b92915050565b600082825260208201905092915050565b7f7a65726f2d616464726573730000000000000000000000000000000000000000600082015250565b6000611560600c83611519565b915061156b8261152a565b602082019050919050565b6000602082019050818103600083015261158f81611553565b9050919050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b60006115f2602f83611519565b91506115fd82611596565b604082019050919050565b60006020820190508181036000830152611621816115e5565b9050919050565b6000819050919050565b600061164d611648611643846111c6565b611628565b6111c6565b9050919050565b600061165f82611632565b9050919050565b600061167182611654565b9050919050565b61168181611666565b82525050565b6000819050919050565b600060ff82169050919050565b60006116b96116b46116af84611687565b611628565b611691565b9050919050565b6116c98161169e565b82525050565b600081519050919050565b60005b838110156116f85780820151818401526020810190506116dd565b83811115611707576000848401525b50505050565b6000611718826116cf565b6117228185611519565b93506117328185602086016116da565b61173b8161108a565b840191505092915050565b600060808201905061175b6000830187611678565b61176860208301866116c0565b818103604083015261177a818561170d565b9050818103606083015261178e818461170d565b905095945050505050565b6117a2816113a9565b82525050565b600081519050919050565b600082825260208201905092915050565b60006117cf826117a8565b6117d981856117b3565b93506117e98185602086016116da565b6117f28161108a565b840191505092915050565b600060608201905061181260008301866114ef565b61181f6020830185611799565b818103604083015261183181846117c4565b9050949350505050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b600061187c60178361183b565b915061188782611846565b601782019050919050565b600061189d826116cf565b6118a7818561183b565b93506118b78185602086016116da565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b60006118f960118361183b565b9150611904826118c3565b601182019050919050565b600061191a8261186f565b91506119268285611892565b9150611931826118ec565b915061193d8284611892565b91508190509392505050565b60006020820190508181036000830152611963818461170d565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006119a5826113a9565b91506119b0836113a9565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156119e9576119e861196b565b5b828202905092915050565b60006119ff826113a9565b9150611a0a836113a9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611a3f57611a3e61196b565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611a84826113a9565b915060008203611a9757611a9661196b565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b6000611ad8602083611519565b9150611ae382611aa2565b602082019050919050565b60006020820190508181036000830152611b0781611acb565b905091905056fea2646970667358221220b91d9fa9fbb89fedde71f61c42362eb9af80c3d1477a420bd5973c7fb83b993464736f6c634300080e0033";

type SuperSoulboundConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SuperSoulboundConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SuperSoulbound__factory extends ContractFactory {
  constructor(...args: SuperSoulboundConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "SuperSoulbound";
  }

  deploy(
    _store: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SuperSoulbound> {
    return super.deploy(_store, overrides || {}) as Promise<SuperSoulbound>;
  }
  getDeployTransaction(
    _store: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_store, overrides || {});
  }
  attach(address: string): SuperSoulbound {
    return super.attach(address) as SuperSoulbound;
  }
  connect(signer: Signer): SuperSoulbound__factory {
    return super.connect(signer) as SuperSoulbound__factory;
  }
  static readonly contractName: "SuperSoulbound";
  public readonly contractName: "SuperSoulbound";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SuperSoulboundInterface {
    return new utils.Interface(_abi) as SuperSoulboundInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SuperSoulbound {
    return new Contract(address, _abi, signerOrProvider) as SuperSoulbound;
  }
}
