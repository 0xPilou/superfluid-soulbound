/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ABRelay, ABRelayInterface } from "../ABRelay";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "int96",
        name: "_baseFlow",
        type: "int96",
      },
      {
        internalType: "uint256",
        name: "_dropId",
        type: "uint256",
      },
    ],
    name: "createdDrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nft",
        type: "address",
      },
      {
        internalType: "int96",
        name: "_baseFlow",
        type: "int96",
      },
      {
        internalType: "uint256",
        name: "_dropId",
        type: "uint256",
      },
    ],
    name: "createdDropFromLiveNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "grantAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "revokeAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_abRegistry",
        type: "address",
      },
    ],
    name: "setABRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_abStream",
        type: "address",
      },
    ],
    name: "setABStream",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_dropId",
        type: "uint256",
      },
    ],
    name: "transferredNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updatedDrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600280546001600160a01b03191673420000000000000000000000000000000000000717905534801561003657600080fd5b5061004033610045565b610095565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610983806100a46000396000f3fe608060405234801561001057600080fd5b50600436106100995760003560e01c80630148f9e51461009e57806350954dd4146100b35780636959470d146100c6578063715018a6146100d95780637ea41543146100e15780638da5cb5b146100f4578063a9cf551414610118578063ad11fe441461012b578063f07d9a441461013e578063f2fde38b14610146578063fa51453f14610159575b600080fd5b6100b16100ac366004610828565b61016c565b005b6100b16100c1366004610863565b610196565b6100b16100d436600461088d565b6102b9565b6100b1610403565b6100b16100ef366004610828565b610417565b6100fc610446565b6040516001600160a01b03909116815260200160405180910390f35b6100b16101263660046108cb565b610455565b6100b1610139366004610828565b6105dc565b6100b1610605565b6100b1610154366004610828565b6106bc565b6100b1610167366004610828565b61073a565b610174610764565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6002546001600160a01b031633148015610244575060016000600260009054906101000a90046001600160a01b03166001600160a01b0316636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa158015610202573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610226919061090c565b6001600160a01b0316815260208101919091526040016000205460ff165b61024d57600080fd5b60035460405163048d426360e51b8152600b84900b6004820152602481018390526001600160a01b03909116906391a84c6090604401600060405180830381600087803b15801561029d57600080fd5b505af11580156102b1573d6000803e3d6000fd5b505050505050565b6002546001600160a01b031633148015610367575060016000600260009054906101000a90046001600160a01b03166001600160a01b0316636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa158015610325573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610349919061090c565b6001600160a01b0316815260208101919091526040016000205460ff165b61037057600080fd5b60035460405163048d426360e51b8152600b84900b6004820152602481018390526001600160a01b03909116906391a84c6090604401600060405180830381600087803b1580156103c057600080fd5b505af11580156103d4573d6000803e3d6000fd5b5050506001600160a01b039093166000908152600160208190526040909120805460ff19169091179055505050565b61040b610764565b61041560006107c3565b565b61041f610764565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b6000546001600160a01b031690565b6002546001600160a01b031633148015610503575060016000600260009054906101000a90046001600160a01b03166001600160a01b0316636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e5919061090c565b6001600160a01b0316815260208101919091526040016000205460ff165b61050c57600080fd5b600480546040516334954a9960e01b81526001600160a01b03909116916334954a999161053f9187918791879101610929565b600060405180830381600087803b15801561055957600080fd5b505af115801561056d573d6000803e3d6000fd5b50506003546040516321a23ca360e11b81526001600160a01b039091169250634344794691506105a590869086908690600401610929565b600060405180830381600087803b1580156105bf57600080fd5b505af11580156105d3573d6000803e3d6000fd5b50505050505050565b6105e4610764565b6001600160a01b03166000908152600160205260409020805460ff19169055565b6002546001600160a01b0316331480156106b3575060016000600260009054906101000a90046001600160a01b03166001600160a01b0316636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa158015610671573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610695919061090c565b6001600160a01b0316815260208101919091526040016000205460ff165b61041557600080fd5b6106c4610764565b6001600160a01b03811661072e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610737816107c3565b50565b610742610764565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b3361076d610446565b6001600160a01b0316146104155760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610725565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461073757600080fd5b60006020828403121561083a57600080fd5b813561084581610813565b9392505050565b8035600b81900b811461085e57600080fd5b919050565b6000806040838503121561087657600080fd5b61087f8361084c565b946020939093013593505050565b6000806000606084860312156108a257600080fd5b83356108ad81610813565b92506108bb6020850161084c565b9150604084013590509250925092565b6000806000606084860312156108e057600080fd5b83356108eb81610813565b925060208401356108fb81610813565b929592945050506040919091013590565b60006020828403121561091e57600080fd5b815161084581610813565b6001600160a01b03938416815291909216602082015260408101919091526060019056fea26469706673582212201c1bcdc7f67dc30e995b8a915e27c45f966de0910fe4fd59b9b3cb29031360bf64736f6c63430008100033";

type ABRelayConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ABRelayConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ABRelay__factory extends ContractFactory {
  constructor(...args: ABRelayConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ABRelay";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ABRelay> {
    return super.deploy(overrides || {}) as Promise<ABRelay>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ABRelay {
    return super.attach(address) as ABRelay;
  }
  connect(signer: Signer): ABRelay__factory {
    return super.connect(signer) as ABRelay__factory;
  }
  static readonly contractName: "ABRelay";
  public readonly contractName: "ABRelay";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ABRelayInterface {
    return new utils.Interface(_abi) as ABRelayInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ABRelay {
    return new Contract(address, _abi, signerOrProvider) as ABRelay;
  }
}
