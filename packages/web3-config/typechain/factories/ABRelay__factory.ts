/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ABRelay, ABRelayInterface } from "../ABRelay";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "createdDrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "grantAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "revokeAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_abStream",
        type: "address",
      },
    ],
    name: "setABStream",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "transferredNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updatedDrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600280546001600160a01b03191673420000000000000000000000000000000000000717905534801561003657600080fd5b5061004033610045565b610095565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61059d806100a46000396000f3fe608060405234801561001057600080fd5b50600436106100835760003560e01c80630148f9e514610088578063709bb22f1461009d578063715018a6146100a55780637ea41543146100ad5780638da5cb5b146100c0578063a9cf5514146100e4578063ad11fe44146100f7578063f07d9a441461009d578063f2fde38b1461010a575b600080fd5b61009b6100963660046104e5565b61011d565b005b61009b610147565b61009b610200565b61009b6100bb3660046104e5565b610212565b6100c8610241565b6040516001600160a01b03909116815260200160405180910390f35b61009b6100f2366004610509565b610250565b61009b6101053660046104e5565b61037a565b61009b6101183660046104e5565b6103a3565b610125610421565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6002546001600160a01b0316331480156101f5575060016000600260009054906101000a90046001600160a01b03166001600160a01b0316636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d7919061054a565b6001600160a01b0316815260208101919091526040016000205460ff165b6101fe57600080fd5b565b610208610421565b6101fe6000610480565b61021a610421565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b6000546001600160a01b031690565b6002546001600160a01b0316331480156102fe575060016000600260009054906101000a90046001600160a01b03166001600160a01b0316636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e0919061054a565b6001600160a01b0316815260208101919091526040016000205460ff165b61030757600080fd5b6003546040516321a23ca360e11b81526001600160a01b03858116600483015284811660248301526044820184905290911690634344794690606401600060405180830381600087803b15801561035d57600080fd5b505af1158015610371573d6000803e3d6000fd5b50505050505050565b610382610421565b6001600160a01b03166000908152600160205260409020805460ff19169055565b6103ab610421565b6001600160a01b0381166104155760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61041e81610480565b50565b3361042a610241565b6001600160a01b0316146101fe5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161040c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461041e57600080fd5b6000602082840312156104f757600080fd5b8135610502816104d0565b9392505050565b60008060006060848603121561051e57600080fd5b8335610529816104d0565b92506020840135610539816104d0565b929592945050506040919091013590565b60006020828403121561055c57600080fd5b8151610502816104d056fea2646970667358221220ab92f0f1adff955542a48ce4d0fc3b662a1d48a0ec800553cb37fcaf20656eec64736f6c63430008100033";

type ABRelayConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ABRelayConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ABRelay__factory extends ContractFactory {
  constructor(...args: ABRelayConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ABRelay";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ABRelay> {
    return super.deploy(overrides || {}) as Promise<ABRelay>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ABRelay {
    return super.attach(address) as ABRelay;
  }
  connect(signer: Signer): ABRelay__factory {
    return super.connect(signer) as ABRelay__factory;
  }
  static readonly contractName: "ABRelay";
  public readonly contractName: "ABRelay";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ABRelayInterface {
    return new utils.Interface(_abi) as ABRelayInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ABRelay {
    return new Contract(address, _abi, signerOrProvider) as ABRelay;
  }
}
