/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ABDropManager, ABDropManagerInterface } from "../ABDropManager";

const _abi = [
  {
    inputs: [],
    name: "DropNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyDeposit",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectDeposit",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectInterface",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientMaxAmountPerAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientRoyalties",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientSupply",
    type: "error",
  },
  {
    inputs: [],
    name: "NothingToClaim",
    type: "error",
  },
  {
    inputs: [],
    name: "UnauthorizedUpdate",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "dropId",
        type: "uint256",
      },
    ],
    name: "DropCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "dropId",
        type: "uint256",
      },
    ],
    name: "DropUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_currencyPayout",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_supply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_royaltySharePerToken",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rightHolderFee",
        type: "uint256",
      },
      {
        internalType: "uint256[4]",
        name: "_salesInfo",
        type: "uint256[4]",
      },
      {
        internalType: "bytes32",
        name: "_merkle",
        type: "bytes32",
      },
    ],
    name: "create",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "drops",
    outputs: [
      {
        internalType: "uint256",
        name: "dropId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rightHolderFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "firstTokenIndex",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "supply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "royaltySharePerToken",
            type: "uint256",
          },
        ],
        internalType: "struct ABDropManager.TokenInfo",
        name: "tokenInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "privateSaleMaxMint",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "privateSaleTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "publicSaleMaxMint",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "publicSaleTime",
            type: "uint256",
          },
        ],
        internalType: "struct ABDropManager.SaleInfo",
        name: "salesInfo",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "currencyPayout",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_messenger",
        type: "address",
      },
      {
        internalType: "address",
        name: "_relay",
        type: "address",
      },
    ],
    name: "initializeV2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_dropId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_merkle",
        type: "bytes32",
      },
    ],
    name: "setMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_dropId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rightHolderFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "setRightHolderInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_dropId",
        type: "uint256",
      },
      {
        internalType: "uint256[4]",
        name: "_saleInfo",
        type: "uint256[4]",
      },
    ],
    name: "setSalesInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_dropId",
        type: "uint256",
      },
      {
        internalType: "uint256[3]",
        name: "_tokenInfo",
        type: "uint256[3]",
      },
    ],
    name: "setTokenInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newTreasury",
        type: "address",
      },
    ],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_dropId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_quantity",
        type: "uint256",
      },
    ],
    name: "updateDropCounter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506115b1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100c55760003560e01c806301981029146100ca57806301ffc9a7146100df57806305395b6f146101075780630840ba721461011a57806318712c211461012d578063595777cd146101405780635eb399681461015357806361d027b31461017c578063715018a6146101a75780638da5cb5b146101af578063a113438c146101b7578063aa40cbd8146101ca578063c4d66de8146101dd578063f0f44260146101f0578063f2fde38b14610203575b600080fd5b6100dd6100d836600461107c565b610216565b005b6100f26100ed3660046110a9565b6102c1565b60405190151581526020015b60405180910390f35b6100dd6101153660046110d3565b610301565b6100dd610128366004611122565b6103fc565b6100dd61013b36600461114c565b610501565b6100dd61014e36600461116e565b610556565b6101666101613660046111f4565b6106d2565b6040516100fe9a9998979695949392919061121a565b60675461018f906001600160a01b031681565b6040516001600160a01b0390911681526020016100fe565b6100dd610791565b61018f6107a5565b6100dd6101c536600461114c565b6107b4565b6100dd6101d83660046112bb565b610827565b6100dd6101eb3660046112f0565b6108c8565b6100dd6101fe3660046112f0565b6109d8565b6100dd6102113660046112f0565b610a29565b61021e610aa2565b8035158061022e57506040810135155b1561024c576040516374235bdf60e11b815260040160405180910390fd5b6000606683815481106102615761026161130b565b600091825260209182902084356007600f939093029091019182015583820135600882015560408085013560098301556060850135600a8301555185815290925060008051602061153c83398151915291015b60405180910390a1505050565b60006301ffc9a760e01b6001600160e01b0319831614806102fb57506001600160e01b0319821660009081526065602052604090205460ff165b92915050565b610309610aa2565b602081013561032b57604051630cea840760e21b815260040160405180910390fd5b604081013561034d5760405163a844960960e01b815260040160405180910390fd5b6000606683815481106103625761036261130b565b600091825260208220600f9091020191508290602002013560048201558160026020020135600682015560018101541580156103ce5750606680546103a990600190611337565b815481106103b9576103b961130b565b90600052602060002090600f02016000015483145b156103de57602082013560058201555b60405183815260008051602061153c833981519152906020016102b4565b600054600290610100900460ff1615801561041e575060005460ff8083169116105b6104435760405162461bcd60e51b815260040161043a9061134a565b60405180910390fd5b6000805461ffff191660ff8316176101001790556001600160a01b03831661047e5760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b0382166104a55760405163d92e233d60e01b815260040160405180910390fd5b606a80546001600160a01b038581166001600160a01b03199283161790925560698054928516929091169190911790556000805461ff001916905560405160ff8216815260008051602061155c833981519152906020016102b4565b610509610aa2565b60006066838154811061051e5761051e61130b565b90600052602060002090600f020190508181600e018190555060008051602061153c833981519152836040516102b491815260200190565b61055e610aa2565b6000841161057f5760405163a844960960e01b815260040160405180910390fd5b8135158061058f57506040820135155b156105ad576040516374235bdf60e11b815260040160405180910390fd5b600085116105ce57604051630cea840760e21b815260040160405180910390fd5b6001600160a01b0388166105f55760405163d92e233d60e01b815260040160405180910390fd5b610606876352a88fdd60e01b610b01565b61062357604051630b7d5ce760e11b815260040160405180910390fd5b6106c78989898660405180606001604052808c81526020018b81526020018a8152506040518060800160405280896000600481106106635761066361130b565b60200201358152602001896001600481106106805761068061130b565b602002013581526020018960026004811061069d5761069d61130b565b60200201358152602001896003600481106106ba576106ba61130b565b6020020135905287610b24565b505050505050505050565b606681815481106106e257600080fd5b6000918252602091829020600f9091020180546001820154600283015460038401546040805160608082018352600488015482526005880154828a0152600688015482840152825160808101845260078901548152600889015499810199909952600988015492890192909252600a87015491880191909152600b860154600c870154600d880154600e9098015496995094979396929591946001600160a01b0391821693908216929116908a565b610799610aa2565b6107a36000610e80565b565b6033546001600160a01b031690565b6000606683815481106107c9576107c961130b565b60009182526020909120600f90910201600d8101549091506001600160a01b0316331461080957604051634f1f214760e01b815260040160405180910390fd5b8181600101600082825461081d9190611398565b9091555050505050565b61082f610aa2565b6001600160a01b0381166108565760405163d92e233d60e01b815260040160405180910390fd5b60006066848154811061086b5761086b61130b565b6000918252602091829020600f9091020160028101859055600c810180546001600160a01b0319166001600160a01b03861617905560405186815290925060008051602061153c833981519152910160405180910390a150505050565b600054610100900460ff16158080156108e85750600054600160ff909116105b806109025750303b158015610902575060005460ff166001145b61091e5760405162461bcd60e51b815260040161043a9061134a565b6000805460ff191660011790558015610941576000805461ff0019166101001790555b6001600160a01b0382166109685760405163d92e233d60e01b815260040160405180910390fd5b606780546001600160a01b0319166001600160a01b038416179055600060685561099863c35b377960e01b610ed2565b6109a0610f50565b80156109d4576000805461ff00191690556040516001815260008051602061155c8339815191529060200160405180910390a15b5050565b6109e0610aa2565b6001600160a01b038116610a075760405163d92e233d60e01b815260040160405180910390fd5b606780546001600160a01b0319166001600160a01b0392909216919091179055565b610a31610aa2565b6001600160a01b038116610a965760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161043a565b610a9f81610e80565b50565b33610aab6107a5565b6001600160a01b0316146107a35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161043a565b6000610b0c83610f7f565b8015610b1d5750610b1d8383610fb2565b9392505050565b60685460009015610ba95760666001606854610b409190611337565b81548110610b5057610b5061130b565b90600052602060002090600f02016004016001015460666001606854610b769190611337565b81548110610b8657610b8661130b565b90600052602060002090600f020160030154610ba29190611398565b9050610bad565b5060005b60666040518061014001604052806068548152602001600081526020018781526020018381526020018681526020018581526020018a6001600160a01b03168152602001896001600160a01b03168152602001886001600160a01b031681526020018481525090806001815401808255809150506001900390600052602060002090600f020160009091909190915060008201518160000155602082015181600101556040820151816002015560608201518160030155608082015181600401600082015181600001556020820151816001015560408201518160020155505060a08201518160070160008201518160000155602082015181600101556040820151816002015560608201518160030155505060c082015181600b0160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060e082015181600c0160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555061010082015181600d0160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555061012082015181600e015550506000620151808560000151600a610d6c91906113ab565b610d769190611430565b606a5460695460685460408051600b86900b60248201526044808201939093528151808203909301835260640181526020820180516001600160e01b0316631425537560e21b17905251633dbb202b60e01b81529394506001600160a01b0392831693633dbb202b93610df393169190629896809060040161146c565b600060405180830381600087803b158015610e0d57600080fd5b505af1158015610e21573d6000803e3d6000fd5b505050507f01a6d33d95d2560a8c53f00317beb1d0364b3ecf2d43f647d2b4671df27f4f45606854604051610e5891815260200190565b60405180910390a160688054906000610e70836114d7565b9190505550505050505050505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160e01b03198082169003610f2b5760405162461bcd60e51b815260206004820152601c60248201527b115490cc4d8d4e881a5b9d985b1a59081a5b9d195c999858d9481a5960221b604482015260640161043a565b6001600160e01b0319166000908152606560205260409020805460ff19166001179055565b600054610100900460ff16610f775760405162461bcd60e51b815260040161043a906114f0565b6107a361103b565b6000610f92826301ffc9a760e01b610fb2565b80156102fb5750610fab826001600160e01b0319610fb2565b1592915050565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d91506000519050828015611024575060208210155b80156110305750600081115b979650505050505050565b600054610100900460ff166110625760405162461bcd60e51b815260040161043a906114f0565b6107a333610e80565b80608081018310156102fb57600080fd5b60008060a0838503121561108f57600080fd5b823591506110a0846020850161106b565b90509250929050565b6000602082840312156110bb57600080fd5b81356001600160e01b031981168114610b1d57600080fd5b600080608083850312156110e657600080fd5b82359150836080840111156110fa57600080fd5b50926020919091019150565b80356001600160a01b038116811461111d57600080fd5b919050565b6000806040838503121561113557600080fd5b61113e83611106565b91506110a060208401611106565b6000806040838503121561115f57600080fd5b50508035926020909101359150565b60008060008060008060008060006101808a8c03121561118d57600080fd5b6111968a611106565b98506111a460208b01611106565b97506111b260408b01611106565b965060608a0135955060808a0135945060a08a0135935060c08a013592506111dd8b60e08c0161106b565b91506101608a013590509295985092959850929598565b60006020828403121561120657600080fd5b5035919050565b6001600160a01b03169052565b60006101e0820190508b82528a602083015289604083015288606083015287516080830152602088015160a0830152604088015160c0830152865160e083015260208701516101008301526040870151610120830152606087015161014083015261128961016083018761120d565b61129761018083018661120d565b6112a56101a083018561120d565b826101c08301529b9a5050505050505050505050565b6000806000606084860312156112d057600080fd5b83359250602084013591506112e760408501611106565b90509250925092565b60006020828403121561130257600080fd5b610b1d82611106565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b818103818111156102fb576102fb611321565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b808201808211156102fb576102fb611321565b60006001600160ff1b03818413828413808216868404861116156113d1576113d1611321565b600160ff1b60008712828116878305891216156113f0576113f0611321565b6000871292508782058712848416161561140c5761140c611321565b8785058712818416161561142257611422611321565b505050929093029392505050565b60008261144d57634e487b7160e01b600052601260045260246000fd5b600160ff1b82146000198414161561146757611467611321565b500590565b60018060a01b038416815260006020606081840152845180606085015260005b818110156114a85786810183015185820160800152820161148c565b506000608082860101526080601f19601f8301168501019250505063ffffffff83166040830152949350505050565b6000600182016114e9576114e9611321565b5060010190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fef55002a98d02ddb9603f2cb836d9e9adc8af240206243d88874ae4e7bb2ca02a7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498a26469706673582212207f7e491b13f84501d949c4bd3a6ae570ed33dd8d103958662364b16670d055c964736f6c63430008100033";

type ABDropManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ABDropManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ABDropManager__factory extends ContractFactory {
  constructor(...args: ABDropManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ABDropManager";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ABDropManager> {
    return super.deploy(overrides || {}) as Promise<ABDropManager>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ABDropManager {
    return super.attach(address) as ABDropManager;
  }
  connect(signer: Signer): ABDropManager__factory {
    return super.connect(signer) as ABDropManager__factory;
  }
  static readonly contractName: "ABDropManager";
  public readonly contractName: "ABDropManager";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ABDropManagerInterface {
    return new utils.Interface(_abi) as ABDropManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ABDropManager {
    return new Contract(address, _abi, signerOrProvider) as ABDropManager;
  }
}
