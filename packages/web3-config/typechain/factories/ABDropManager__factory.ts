/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ABDropManager, ABDropManagerInterface } from "../ABDropManager";

const _abi = [
  {
    inputs: [],
    name: "DropNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyDeposit",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectDeposit",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectInterface",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientMaxAmountPerAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientRoyalties",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientSupply",
    type: "error",
  },
  {
    inputs: [],
    name: "NothingToClaim",
    type: "error",
  },
  {
    inputs: [],
    name: "UnauthorizedUpdate",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "dropId",
        type: "uint256",
      },
    ],
    name: "DropCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "dropId",
        type: "uint256",
      },
    ],
    name: "DropUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_currencyPayout",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_supply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_royaltySharePerToken",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rightHolderFee",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "phaseStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxMint",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "merkle",
            type: "bytes32",
          },
        ],
        internalType: "struct ABDropManager.Phase[]",
        name: "phases",
        type: "tuple[]",
      },
    ],
    name: "create",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "drops",
    outputs: [
      {
        internalType: "uint256",
        name: "dropId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rightHolderFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "firstTokenIndex",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "supply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "royaltySharePerToken",
            type: "uint256",
          },
        ],
        internalType: "struct ABDropManager.TokenInfo",
        name: "tokenInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "privateSaleMaxMint",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "privateSaleTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "publicSaleMaxMint",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "publicSaleTime",
            type: "uint256",
          },
        ],
        internalType: "struct ABDropManager.SaleInfo",
        name: "salesInfo",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "currencyPayout",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_messenger",
        type: "address",
      },
      {
        internalType: "address",
        name: "_relay",
        type: "address",
      },
    ],
    name: "initializeV2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_dropId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rightHolderFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "setRightHolderInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_dropId",
        type: "uint256",
      },
      {
        internalType: "uint256[3]",
        name: "_tokenInfo",
        type: "uint256[3]",
      },
    ],
    name: "setTokenInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newTreasury",
        type: "address",
      },
    ],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_dropId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_quantity",
        type: "uint256",
      },
    ],
    name: "updateDropCounter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611423806100206000396000f3fe608060405234801561001057600080fd5b50600436106100af5760003560e01c806301ffc9a7146100b457806305395b6f146100dc5780630840ba72146100f15780635eb399681461010457806361d027b31461012d578063715018a6146101585780638da5cb5b14610160578063a113438c14610168578063aa40cbd81461017b578063b61968881461018e578063c4d66de8146101a1578063f0f44260146101b4578063f2fde38b146101c7575b600080fd5b6100c76100c2366004610d88565b6101da565b60405190151581526020015b60405180910390f35b6100ef6100ea366004610db9565b61021a565b005b6100ef6100ff366004610e08565b61031e565b610117610112366004610e3b565b610423565b6040516100d39a99989796959493929190610e61565b606754610140906001600160a01b031681565b6040516001600160a01b0390911681526020016100d3565b6100ef6104e2565b6101406104f6565b6100ef610176366004610f02565b610505565b6100ef610189366004610f24565b610578565b6100ef61019c366004610fc7565b610619565b6100ef6101af366004611100565b6106e1565b6100ef6101c2366004611100565b6107e1565b6100ef6101d5366004611100565b610832565b60006301ffc9a760e01b6001600160e01b03198316148061021457506001600160e01b0319821660009081526065602052604090205460ff165b92915050565b6102226108ab565b602081013561024457604051630cea840760e21b815260040160405180910390fd5b60408101356102665760405163a844960960e01b815260040160405180910390fd5b60006066838154811061027b5761027b61111b565b600091825260208220600f9091020191508290602002013560048201558160026020020135600682015560018101541580156102e75750606680546102c290600190611147565b815481106102d2576102d261111b565b90600052602060002090600f02016000015483145b156102f757602082013560058201555b6040518381526000805160206113ae833981519152906020015b60405180910390a1505050565b600054600290610100900460ff16158015610340575060005460ff8083169116105b6103655760405162461bcd60e51b815260040161035c9061115a565b60405180910390fd5b6000805461ffff191660ff8316176101001790556001600160a01b0383166103a05760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b0382166103c75760405163d92e233d60e01b815260040160405180910390fd5b606a80546001600160a01b038581166001600160a01b03199283161790925560698054928516929091169190911790556000805461ff001916905560405160ff821681526000805160206113ce83398151915290602001610311565b6066818154811061043357600080fd5b6000918252602091829020600f9091020180546001820154600283015460038401546040805160608082018352600488015482526005880154828a0152600688015482840152825160808101845260078901548152600889015499810199909952600988015492890192909252600a87015491880191909152600b860154600c870154600d880154600e9098015496995094979396929591946001600160a01b0391821693908216929116908a565b6104ea6108ab565b6104f4600061090a565b565b6033546001600160a01b031690565b60006066838154811061051a5761051a61111b565b60009182526020909120600f90910201600d8101549091506001600160a01b0316331461055a57604051634f1f214760e01b815260040160405180910390fd5b8181600101600082825461056e91906111a8565b9091555050505050565b6105806108ab565b6001600160a01b0381166105a75760405163d92e233d60e01b815260040160405180910390fd5b6000606684815481106105bc576105bc61111b565b6000918252602091829020600f9091020160028101859055600c810180546001600160a01b0319166001600160a01b0386161790556040518681529092506000805160206113ae833981519152910160405180910390a150505050565b6106216108ab565b600083116106425760405163a844960960e01b815260040160405180910390fd5b6000841161066357604051630cea840760e21b815260040160405180910390fd5b6001600160a01b03871661068a5760405163d92e233d60e01b815260040160405180910390fd5b6106d78888888560405180606001604052808b81526020018a815260200189815250604051806080016040528060008152602001600081526020016000815260200160008152508761095c565b5050505050505050565b600054610100900460ff16158080156107015750600054600160ff909116105b8061071b5750303b15801561071b575060005460ff166001145b6107375760405162461bcd60e51b815260040161035c9061115a565b6000805460ff19166001179055801561075a576000805461ff0019166101001790555b6001600160a01b0382166107815760405163d92e233d60e01b815260040160405180910390fd5b606780546001600160a01b0319166001600160a01b03841617905560006068556107a9610d2e565b80156107dd576000805461ff0019169055604051600181526000805160206113ce8339815191529060200160405180910390a15b5050565b6107e96108ab565b6001600160a01b0381166108105760405163d92e233d60e01b815260040160405180910390fd5b606780546001600160a01b0319166001600160a01b0392909216919091179055565b61083a6108ab565b6001600160a01b03811661089f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161035c565b6108a88161090a565b50565b336108b46104f6565b6001600160a01b0316146104f45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161035c565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b606854600090156109e157606660016068546109789190611147565b815481106109885761098861111b565b90600052602060002090600f020160040160010154606660016068546109ae9190611147565b815481106109be576109be61111b565b90600052602060002090600f0201600301546109da91906111a8565b90506109e5565b5060005b60666040518061014001604052806068548152602001600081526020018781526020018381526020018681526020018581526020018a6001600160a01b03168152602001896001600160a01b03168152602001886001600160a01b031681526020016000801b81525090806001815401808255809150506001900390600052602060002090600f020160009091909190915060008201518160000155602082015181600101556040820151816002015560608201518160030155608082015181600401600082015181600001556020820151816001015560408201518160020155505060a08201518160070160008201518160000155602082015181600101556040820151816002015560608201518160030155505060c082015181600b0160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060e082015181600c0160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555061010082015181600d0160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555061012082015181600e01555050856001600160a01b031663a706ed95606854846040518363ffffffff1660e01b8152600401610bc09291906111bb565b600060405180830381600087803b158015610bda57600080fd5b505af1158015610bee573d6000803e3d6000fd5b5050855160009250620151809150610c0790600a61121d565b610c1191906112a2565b606a54606954606854604051600b85900b602482015260448101919091526001600160a01b038c8116606483015293945091831692633dbb202b9291169060840160408051601f198184030181529181526020820180516001600160e01b0316632f41971560e01b1790525160e084901b6001600160e01b0319168152610ca192919062989680906004016112de565b600060405180830381600087803b158015610cbb57600080fd5b505af1158015610ccf573d6000803e3d6000fd5b505050507f01a6d33d95d2560a8c53f00317beb1d0364b3ecf2d43f647d2b4671df27f4f45606854604051610d0691815260200190565b60405180910390a160688054906000610d1e83611349565b9190505550505050505050505050565b600054610100900460ff16610d555760405162461bcd60e51b815260040161035c90611362565b6104f4600054610100900460ff16610d7f5760405162461bcd60e51b815260040161035c90611362565b6104f43361090a565b600060208284031215610d9a57600080fd5b81356001600160e01b031981168114610db257600080fd5b9392505050565b60008060808385031215610dcc57600080fd5b8235915083608084011115610de057600080fd5b50926020919091019150565b80356001600160a01b0381168114610e0357600080fd5b919050565b60008060408385031215610e1b57600080fd5b610e2483610dec565b9150610e3260208401610dec565b90509250929050565b600060208284031215610e4d57600080fd5b5035919050565b6001600160a01b03169052565b60006101e0820190508b82528a602083015289604083015288606083015287516080830152602088015160a0830152604088015160c0830152865160e0830152602087015161010083015260408701516101208301526060870151610140830152610ed0610160830187610e54565b610ede610180830186610e54565b610eec6101a0830185610e54565b826101c08301529b9a5050505050505050505050565b60008060408385031215610f1557600080fd5b50508035926020909101359150565b600080600060608486031215610f3957600080fd5b8335925060208401359150610f5060408501610dec565b90509250925092565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b0381118282101715610f9157610f91610f59565b60405290565b604051601f8201601f191681016001600160401b0381118282101715610fbf57610fbf610f59565b604052919050565b600080600080600080600080610100898b031215610fe457600080fd5b610fed89610dec565b9750610ffb60208a01610dec565b965061100960408a01610dec565b9550606089013594506080890135935060a0890135925060c0890135915060e08901356001600160401b038082111561104157600080fd5b818b0191508b601f83011261105557600080fd5b81358181111561106757611067610f59565b61107660208260051b01610f97565b8181526020808201935060609092028401909101908d82111561109857600080fd5b6020840193505b818410156110ec576060848f0312156110b757600080fd5b6110bf610f6f565b8435815260208501356020820152604085013560408201528084525060208301925060608401935061109f565b809450505050509295985092959890939650565b60006020828403121561111257600080fd5b610db282610dec565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111561021457610214611131565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b8082018082111561021457610214611131565b600060408083018584526020828186015281865180845260609350838701915082880160005b8281101561120e5781518051855285810151868601528701518785015292850192908401906001016111e1565b50919998505050505050505050565b60006001600160ff1b038184138284138082168684048611161561124357611243611131565b600160ff1b600087128281168783058912161561126257611262611131565b6000871292508782058712848416161561127e5761127e611131565b8785058712818416161561129457611294611131565b505050929093029392505050565b6000826112bf57634e487b7160e01b600052601260045260246000fd5b600160ff1b8214600019841416156112d9576112d9611131565b500590565b60018060a01b038416815260006020606081840152845180606085015260005b8181101561131a578681018301518582016080015282016112fe565b506000608082860101526080601f19601f8301168501019250505063ffffffff83166040830152949350505050565b60006001820161135b5761135b611131565b5060010190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fef55002a98d02ddb9603f2cb836d9e9adc8af240206243d88874ae4e7bb2ca02a7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498a26469706673582212200af9a206d16cd7a250ca744b8e51e307c64a7b9daf4319cde91f72ee509aa88a64736f6c63430008100033";

type ABDropManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ABDropManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ABDropManager__factory extends ContractFactory {
  constructor(...args: ABDropManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ABDropManager";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ABDropManager> {
    return super.deploy(overrides || {}) as Promise<ABDropManager>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ABDropManager {
    return super.attach(address) as ABDropManager;
  }
  connect(signer: Signer): ABDropManager__factory {
    return super.connect(signer) as ABDropManager__factory;
  }
  static readonly contractName: "ABDropManager";
  public readonly contractName: "ABDropManager";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ABDropManagerInterface {
    return new utils.Interface(_abi) as ABDropManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ABDropManager {
    return new Contract(address, _abi, signerOrProvider) as ABDropManager;
  }
}
