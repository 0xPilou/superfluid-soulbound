/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ABDropManager, ABDropManagerInterface } from "../ABDropManager";

const _abi = [
  {
    inputs: [],
    name: "DropNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyDeposit",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectDeposit",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectInterface",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientMaxAmountPerAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientRoyalties",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientSupply",
    type: "error",
  },
  {
    inputs: [],
    name: "NothingToClaim",
    type: "error",
  },
  {
    inputs: [],
    name: "UnauthorizedUpdate",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "dropId",
        type: "uint256",
      },
    ],
    name: "DropCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "dropId",
        type: "uint256",
      },
    ],
    name: "DropUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_currencyPayout",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_supply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_royaltySharePerToken",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rightHolderFee",
        type: "uint256",
      },
      {
        internalType: "uint256[4]",
        name: "_salesInfo",
        type: "uint256[4]",
      },
      {
        internalType: "bytes32",
        name: "_merkle",
        type: "bytes32",
      },
    ],
    name: "create",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "drops",
    outputs: [
      {
        internalType: "uint256",
        name: "dropId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rightHolderFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "firstTokenIndex",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "supply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "royaltySharePerToken",
            type: "uint256",
          },
        ],
        internalType: "struct ABDropManager.TokenInfo",
        name: "tokenInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "privateSaleMaxMint",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "privateSaleTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "publicSaleMaxMint",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "publicSaleTime",
            type: "uint256",
          },
        ],
        internalType: "struct ABDropManager.SaleInfo",
        name: "salesInfo",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "currencyPayout",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "address",
        name: "_messenger",
        type: "address",
      },
      {
        internalType: "address",
        name: "_relay",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_dropId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_merkle",
        type: "bytes32",
      },
    ],
    name: "setMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_dropId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rightHolderFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "setRightHolderInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_dropId",
        type: "uint256",
      },
      {
        internalType: "uint256[4]",
        name: "_saleInfo",
        type: "uint256[4]",
      },
    ],
    name: "setSalesInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_dropId",
        type: "uint256",
      },
      {
        internalType: "uint256[3]",
        name: "_tokenInfo",
        type: "uint256[3]",
      },
    ],
    name: "setTokenInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newTreasury",
        type: "address",
      },
    ],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_dropId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_quantity",
        type: "uint256",
      },
    ],
    name: "updateDropCounter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

type ABDropManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ABDropManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ABDropManager__factory extends ContractFactory {
  constructor(...args: ABDropManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ABDropManager";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ABDropManager> {
    return super.deploy(overrides || {}) as Promise<ABDropManager>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ABDropManager {
    return super.attach(address) as ABDropManager;
  }
  connect(signer: Signer): ABDropManager__factory {
    return super.connect(signer) as ABDropManager__factory;
  }
  static readonly contractName: "ABDropManager";
  public readonly contractName: "ABDropManager";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ABDropManagerInterface {
    return new utils.Interface(_abi) as ABDropManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ABDropManager {
    return new Contract(address, _abi, signerOrProvider) as ABDropManager;
  }
}
