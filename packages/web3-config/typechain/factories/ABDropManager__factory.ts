/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ABDropManager, ABDropManagerInterface } from "../ABDropManager";

const _abi = [
  {
    inputs: [],
    name: "DropNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyDeposit",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectDeposit",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectInterface",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientMaxAmountPerAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientRoyalties",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientSupply",
    type: "error",
  },
  {
    inputs: [],
    name: "NothingToClaim",
    type: "error",
  },
  {
    inputs: [],
    name: "UnauthorizedUpdate",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "dropId",
        type: "uint256",
      },
    ],
    name: "DropCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "dropId",
        type: "uint256",
      },
    ],
    name: "DropUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_currencyPayout",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_supply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_royaltySharePerToken",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rightHolderFee",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "phaseStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxMint",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "merkle",
            type: "bytes32",
          },
        ],
        internalType: "struct ABDropManager.Phase[]",
        name: "phases",
        type: "tuple[]",
      },
    ],
    name: "create",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "drops",
    outputs: [
      {
        internalType: "uint256",
        name: "dropId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rightHolderFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "firstTokenIndex",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "supply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "royaltySharePerToken",
            type: "uint256",
          },
        ],
        internalType: "struct ABDropManager.TokenInfo",
        name: "tokenInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "privateSaleMaxMint",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "privateSaleTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "publicSaleMaxMint",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "publicSaleTime",
            type: "uint256",
          },
        ],
        internalType: "struct ABDropManager.SaleInfo",
        name: "salesInfo",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "currencyPayout",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_messenger",
        type: "address",
      },
      {
        internalType: "address",
        name: "_relay",
        type: "address",
      },
    ],
    name: "initializeV2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_dropId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_merkle",
        type: "bytes32",
      },
    ],
    name: "setMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_dropId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rightHolderFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "setRightHolderInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_dropId",
        type: "uint256",
      },
      {
        internalType: "uint256[4]",
        name: "_saleInfo",
        type: "uint256[4]",
      },
    ],
    name: "setSalesInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_dropId",
        type: "uint256",
      },
      {
        internalType: "uint256[3]",
        name: "_tokenInfo",
        type: "uint256[3]",
      },
    ],
    name: "setTokenInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newTreasury",
        type: "address",
      },
    ],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_dropId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_quantity",
        type: "uint256",
      },
    ],
    name: "updateDropCounter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611609806100206000396000f3fe608060405234801561001057600080fd5b50600436106100c55760003560e01c806301981029146100ca57806301ffc9a7146100df57806305395b6f146101075780630840ba721461011a57806318712c211461012d5780635eb399681461014057806361d027b314610169578063715018a6146101945780638da5cb5b1461019c578063a113438c146101a4578063aa40cbd8146101b7578063b6196888146101ca578063c4d66de8146101dd578063f0f44260146101f0578063f2fde38b14610203575b600080fd5b6100dd6100d8366004610f47565b610216565b005b6100f26100ed366004610f7a565b6102c1565b60405190151581526020015b60405180910390f35b6100dd610115366004610fab565b610301565b6100dd610128366004610fee565b6103fc565b6100dd61013b366004611021565b610501565b61015361014e366004611043565b610556565b6040516100fe9a99989796959493929190611069565b60675461017c906001600160a01b031681565b6040516001600160a01b0390911681526020016100fe565b6100dd610615565b61017c610629565b6100dd6101b2366004611021565b610638565b6100dd6101c536600461110a565b6106ab565b6100dd6101d83660046111ad565b61074c565b6100dd6101eb3660046112e6565b6107ef565b6100dd6101fe3660046112e6565b6108ff565b6100dd6102113660046112e6565b610950565b61021e6109c9565b8035158061022e57506040810135155b1561024c576040516374235bdf60e11b815260040160405180910390fd5b60006066838154811061026157610261611301565b600091825260209182902084356007600f939093029091019182015583820135600882015560408085013560098301556060850135600a8301555185815290925060008051602061159483398151915291015b60405180910390a1505050565b60006301ffc9a760e01b6001600160e01b0319831614806102fb57506001600160e01b0319821660009081526065602052604090205460ff165b92915050565b6103096109c9565b602081013561032b57604051630cea840760e21b815260040160405180910390fd5b604081013561034d5760405163a844960960e01b815260040160405180910390fd5b60006066838154811061036257610362611301565b600091825260208220600f9091020191508290602002013560048201558160026020020135600682015560018101541580156103ce5750606680546103a99060019061132d565b815481106103b9576103b9611301565b90600052602060002090600f02016000015483145b156103de57602082013560058201555b604051838152600080516020611594833981519152906020016102b4565b600054600290610100900460ff1615801561041e575060005460ff8083169116105b6104435760405162461bcd60e51b815260040161043a90611340565b60405180910390fd5b6000805461ffff191660ff8316176101001790556001600160a01b03831661047e5760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b0382166104a55760405163d92e233d60e01b815260040160405180910390fd5b606a80546001600160a01b038581166001600160a01b03199283161790925560698054928516929091169190911790556000805461ff001916905560405160ff821681526000805160206115b4833981519152906020016102b4565b6105096109c9565b60006066838154811061051e5761051e611301565b90600052602060002090600f020190508181600e0181905550600080516020611594833981519152836040516102b491815260200190565b6066818154811061056657600080fd5b6000918252602091829020600f9091020180546001820154600283015460038401546040805160608082018352600488015482526005880154828a0152600688015482840152825160808101845260078901548152600889015499810199909952600988015492890192909252600a87015491880191909152600b860154600c870154600d880154600e9098015496995094979396929591946001600160a01b0391821693908216929116908a565b61061d6109c9565b6106276000610a28565b565b6033546001600160a01b031690565b60006066838154811061064d5761064d611301565b60009182526020909120600f90910201600d8101549091506001600160a01b0316331461068d57604051634f1f214760e01b815260040160405180910390fd5b818160010160008282546106a1919061138e565b9091555050505050565b6106b36109c9565b6001600160a01b0381166106da5760405163d92e233d60e01b815260040160405180910390fd5b6000606684815481106106ef576106ef611301565b6000918252602091829020600f9091020160028101859055600c810180546001600160a01b0319166001600160a01b038616179055604051868152909250600080516020611594833981519152910160405180910390a150505050565b6107546109c9565b600083116107755760405163a844960960e01b815260040160405180910390fd5b6000841161079657604051630cea840760e21b815260040160405180910390fd5b6001600160a01b0387166107bd5760405163d92e233d60e01b815260040160405180910390fd5b6107e58888888560405180606001604052808b81526020018a81526020018981525086610a7a565b5050505050505050565b600054610100900460ff161580801561080f5750600054600160ff909116105b806108295750303b158015610829575060005460ff166001145b6108455760405162461bcd60e51b815260040161043a90611340565b6000805460ff191660011790558015610868576000805461ff0019166101001790555b6001600160a01b03821661088f5760405163d92e233d60e01b815260040160405180910390fd5b606780546001600160a01b0319166001600160a01b03841617905560006068556108bf63c35b377960e01b610e6f565b6108c7610eed565b80156108fb576000805461ff0019169055604051600181526000805160206115b48339815191529060200160405180910390a15b5050565b6109076109c9565b6001600160a01b03811661092e5760405163d92e233d60e01b815260040160405180910390fd5b606780546001600160a01b0319166001600160a01b0392909216919091179055565b6109586109c9565b6001600160a01b0381166109bd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161043a565b6109c681610a28565b50565b336109d2610629565b6001600160a01b0316146106275760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161043a565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60685460009015610aff5760666001606854610a96919061132d565b81548110610aa657610aa6611301565b90600052602060002090600f02016004016001015460666001606854610acc919061132d565b81548110610adc57610adc611301565b90600052602060002090600f020160030154610af8919061138e565b9050610b03565b5060005b6066604051806101400160405280606854815260200160008152602001868152602001838152602001858152602001604051806080016040528060008152602001600081526020016000815260200160008152508152602001896001600160a01b03168152602001886001600160a01b03168152602001876001600160a01b031681526020016000801b81525090806001815401808255809150506001900390600052602060002090600f020160009091909190915060008201518160000155602082015181600101556040820151816002015560608201518160030155608082015181600401600082015181600001556020820151816001015560408201518160020155505060a08201518160070160008201518160000155602082015181600101556040820151816002015560608201518160030155505060c082015181600b0160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060e082015181600c0160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555061010082015181600d0160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555061012082015181600e01555050846001600160a01b031663a706ed95606854846040518363ffffffff1660e01b8152600401610d029291906113a1565b600060405180830381600087803b158015610d1c57600080fd5b505af1158015610d30573d6000803e3d6000fd5b5050845160009250620151809150610d4990600a611403565b610d539190611488565b606a54606954606854604051600b85900b602482015260448101919091526001600160a01b038b8116606483015293945091831692633dbb202b9291169060840160408051601f198184030181529181526020820180516001600160e01b0316632f41971560e01b1790525160e084901b6001600160e01b0319168152610de392919062989680906004016114c4565b600060405180830381600087803b158015610dfd57600080fd5b505af1158015610e11573d6000803e3d6000fd5b505050507f01a6d33d95d2560a8c53f00317beb1d0364b3ecf2d43f647d2b4671df27f4f45606854604051610e4891815260200190565b60405180910390a160688054906000610e608361152f565b91905055505050505050505050565b6001600160e01b03198082169003610ec85760405162461bcd60e51b815260206004820152601c60248201527b115490cc4d8d4e881a5b9d985b1a59081a5b9d195c999858d9481a5960221b604482015260640161043a565b6001600160e01b0319166000908152606560205260409020805460ff19166001179055565b600054610100900460ff16610f145760405162461bcd60e51b815260040161043a90611548565b610627600054610100900460ff16610f3e5760405162461bcd60e51b815260040161043a90611548565b61062733610a28565b60008060a08385031215610f5a57600080fd5b823591508360a084011115610f6e57600080fd5b50926020919091019150565b600060208284031215610f8c57600080fd5b81356001600160e01b031981168114610fa457600080fd5b9392505050565b60008060808385031215610fbe57600080fd5b8235915083608084011115610f6e57600080fd5b80356001600160a01b0381168114610fe957600080fd5b919050565b6000806040838503121561100157600080fd5b61100a83610fd2565b915061101860208401610fd2565b90509250929050565b6000806040838503121561103457600080fd5b50508035926020909101359150565b60006020828403121561105557600080fd5b5035919050565b6001600160a01b03169052565b60006101e0820190508b82528a602083015289604083015288606083015287516080830152602088015160a0830152604088015160c0830152865160e08301526020870151610100830152604087015161012083015260608701516101408301526110d861016083018761105c565b6110e661018083018661105c565b6110f46101a083018561105c565b826101c08301529b9a5050505050505050505050565b60008060006060848603121561111f57600080fd5b833592506020840135915061113660408501610fd2565b90509250925092565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b03811182821017156111775761117761113f565b60405290565b604051601f8201601f191681016001600160401b03811182821017156111a5576111a561113f565b604052919050565b600080600080600080600080610100898b0312156111ca57600080fd5b6111d389610fd2565b97506111e160208a01610fd2565b96506111ef60408a01610fd2565b9550606089013594506080890135935060a0890135925060c0890135915060e08901356001600160401b038082111561122757600080fd5b818b0191508b601f83011261123b57600080fd5b81358181111561124d5761124d61113f565b61125c60208260051b0161117d565b8181526020808201935060609092028401909101908d82111561127e57600080fd5b6020840193505b818410156112d2576060848f03121561129d57600080fd5b6112a5611155565b84358152602085013560208201526040850135604082015280845250602083019250606084019350611285565b809450505050509295985092959890939650565b6000602082840312156112f857600080fd5b610fa482610fd2565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b818103818111156102fb576102fb611317565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b808201808211156102fb576102fb611317565b600060408083018584526020828186015281865180845260609350838701915082880160005b828110156113f45781518051855285810151868601528701518785015292850192908401906001016113c7565b50919998505050505050505050565b60006001600160ff1b038184138284138082168684048611161561142957611429611317565b600160ff1b600087128281168783058912161561144857611448611317565b6000871292508782058712848416161561146457611464611317565b8785058712818416161561147a5761147a611317565b505050929093029392505050565b6000826114a557634e487b7160e01b600052601260045260246000fd5b600160ff1b8214600019841416156114bf576114bf611317565b500590565b60018060a01b038416815260006020606081840152845180606085015260005b81811015611500578681018301518582016080015282016114e4565b506000608082860101526080601f19601f8301168501019250505063ffffffff83166040830152949350505050565b60006001820161154157611541611317565b5060010190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fef55002a98d02ddb9603f2cb836d9e9adc8af240206243d88874ae4e7bb2ca02a7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498a264697066735822122057f1b356a95667c5887f5a5fae0a32a61078ea20fc68f62fe7fedf19b6e11b9c64736f6c63430008100033";

type ABDropManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ABDropManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ABDropManager__factory extends ContractFactory {
  constructor(...args: ABDropManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ABDropManager";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ABDropManager> {
    return super.deploy(overrides || {}) as Promise<ABDropManager>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ABDropManager {
    return super.attach(address) as ABDropManager;
  }
  connect(signer: Signer): ABDropManager__factory {
    return super.connect(signer) as ABDropManager__factory;
  }
  static readonly contractName: "ABDropManager";
  public readonly contractName: "ABDropManager";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ABDropManagerInterface {
    return new utils.Interface(_abi) as ABDropManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ABDropManager {
    return new Contract(address, _abi, signerOrProvider) as ABDropManager;
  }
}
