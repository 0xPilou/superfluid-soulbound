/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ABStream, ABStreamInterface } from "../ABStream";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISuperfluid",
        name: "host",
        type: "address",
      },
      {
        internalType: "address",
        name: "relay",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FORBIDDEN",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_FLOWRATE",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperToken",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "afterAgreementCreated",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperToken",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "afterAgreementTerminated",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperToken",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "afterAgreementUpdated",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperToken",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "beforeAgreementCreated",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperToken",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "beforeAgreementTerminated",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperToken",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "beforeAgreementUpdated",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cfaV1Lib",
    outputs: [
      {
        internalType: "contract ISuperfluid",
        name: "host",
        type: "address",
      },
      {
        internalType: "contract IConstantFlowAgreementV1",
        name: "cfa",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "flowRates",
    outputs: [
      {
        internalType: "int96",
        name: "",
        type: "int96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getABRelay",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getABToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
    ],
    name: "getFlow",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "int96",
        name: "flowRate",
        type: "int96",
      },
      {
        internalType: "uint256",
        name: "deposit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "owedDeposit",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int96",
        name: "flowRate",
        type: "int96",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "initStream",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_AB_TOKEN",
        type: "address",
      },
    ],
    name: "setAB_TOKEN",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "previousReceiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "newReceiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "updateStream",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200134b3803806200134b8339810160408190526200003491620001b1565b6200003f3362000148565b6001600160a01b038216620000585762000058620001f0565b6040805180820182526001600160a01b0384168082529151635b69006f60e11b81527fa9214cc96615e0085d3bb077758db69497dc2dce3b2b1e97bc93c3d18d83efd360048201529091602083019163b6d200de90602401602060405180830381865afa158015620000ce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000f4919062000206565b6001600160a01b039081169091528151600180546001600160a01b0319908116928416929092179055602090920151600280548416918316919091179055600480549092169216919091179055506200022d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381168114620001ae57600080fd5b50565b60008060408385031215620001c557600080fd5b8251620001d28162000198565b6020840151909250620001e58162000198565b809150509250929050565b634e487b7160e01b600052600160045260246000fd5b6000602082840312156200021957600080fd5b8151620002268162000198565b9392505050565b61110e806200023d6000396000f3fe608060405234801561001057600080fd5b50600436106100db5760003560e01c8063230dbd29146100e057806330d9c915146101095780633c4330241461011c578063434479461461013157806353c11f991461014457806355586a31146101575780635f9e7d7714610191578063693c623d146101a4578063715018a6146101b757806379bcb8df146101bf578063884d1f40146101f55780638da5cb5b14610208578063951683821461021d578063b1ec46f814610253578063d86ed3e514610264578063ef0dc83714610277578063f2fde38b14610288575b600080fd5b6100f36100ee366004610ba7565b61029b565b6040516101009190610cc1565b60405180910390f35b6100f3610117366004610cdb565b6102f0565b61012f61012a366004610d79565b610341565b005b61012f61013f366004610d96565b610381565b6100f3610152366004610ba7565b61044d565b600154600254610171916001600160a01b03908116911682565b604080516001600160a01b03938416815292909116602083015201610100565b6100f361019f366004610cdb565b6104a0565b61012f6101b2366004610de6565b610507565b61012f610540565b6101e26101cd366004610e12565b600560205260009081526040902054600b0b81565b604051600b9190910b8152602001610100565b6100f3610203366004610cdb565b610554565b6102106105a5565b6040516101009190610e2b565b61023061022b366004610d79565b6105b4565b60408051948552600b9390930b6020850152918301526060820152608001610100565b6004546001600160a01b0316610210565b6100f3610272366004610ba7565b610646565b6003546001600160a01b0316610210565b61012f610296366004610d79565b610696565b60405162461bcd60e51b815260206004820152602e60248201526000805160206110b983398151915260448201526d19595b595b9d08155c19185d195960921b60648201526060906084015b60405180910390fd5b60405162461bcd60e51b815260206004820152602f602482015260008051602061109983398151915260448201526e1c99595b595b9d0810dc99585d1959608a1b60648201526060906084016102e7565b61034961070f565b6001600160a01b03811661035f5761035f610e3f565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6004546001600160a01b031633146103ac5760405163036be76f60e61b815260040160405180910390fd5b600354604051634dcfa0af60e11b81526001600160a01b0390911690639b9f415e906103dc908590600401610e2b565b600060405180830381600087803b1580156103f657600080fd5b505af115801561040a573d6000803e3d6000fd5b50505060008281526005602052604090205461042b91508490600b0b61076e565b600081815260056020526040902054610448908390600b0b6107ec565b505050565b60405162461bcd60e51b815260206004820152603160248201526000805160206110b983398151915260448201527019595b595b9d0815195c9b5a5b985d1959607a1b60648201526060906084016102e7565b60405162461bcd60e51b815260206004820152603360248201527f556e737570706f727465642063616c6c6261636b202d20204265666f7265204160448201527219dc99595b595b9d0815195c9b5a5b985d1959606a1b60648201526060906084016102e7565b6004546001600160a01b031633146105325760405163036be76f60e61b815260040160405180910390fd5b61053c828261084d565b5050565b61054861070f565b610552600061089f565b565b60405162461bcd60e51b815260206004820152602f602482015260008051602061109983398151915260448201526e1c99595b595b9d081d5c19185d1959608a1b60648201526060906084016102e7565b6000546001600160a01b031690565b600254600354604051631cd43d1160e31b81526000928392839283926001600160a01b039081169263e6a1e888926105f6929091169030908a90600401610e55565b608060405180830381865afa158015610613573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106379190610e78565b93509350935093509193509193565b60405162461bcd60e51b815260206004820152602e60248201526000805160206110b983398151915260448201526d19595b595b9d0810dc99585d195960921b60648201526060906084016102e7565b61069e61070f565b6001600160a01b0381166107035760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102e7565b61070c8161089f565b50565b336107186105a5565b6001600160a01b0316146105525760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102e7565b306001600160a01b03831603610782575050565b600061078d836108ef565b905081600b0b81600b0b036107b85760035461044890600190309086906001600160a01b0316610977565b81600b0b81600b0b1315610448576003546104489084906001600160a01b03166107e28585610ecc565b600192919061099d565b6001600160a01b0382166107fe575050565b6000610809836108ef565b905080600b0b600003610831576003546104489060019085906001600160a01b0316856109bd565b6003546104489084906001600160a01b03166107e28585610eff565b600082600b0b1361087157604051636700851560e01b815260040160405180910390fd5b600090815260056020526040902080546001600160601b0319166001600160601b0392909216919091179055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600254600354604051631cd43d1160e31b815260009283926001600160a01b039182169263e6a1e8889261092b92169030908890600401610e55565b608060405180830381865afa158015610948573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096c9190610e78565b509095945050505050565b6040805160008152602081019091526109979085908590859085906109dd565b50505050565b604080516000815260208101909152610997908590859085908590610abc565b604080516000815260208101909152610997908590859085908590610b20565b845460018601546040805160008152602081019091526001600160a01b03928316926339255d5b921690819063b4b333c690610a229088908b908b9060448101610f42565b60408051808303601f1901815291815260208201805160e094851b6001600160e01b03909116179052519185901b6001600160e01b0319168252610a6d939250908690600401610f80565b6000604051808303816000875af1158015610a8c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ab49190810190610fb6565b505050505050565b845460018601546001600160a01b03918216916339255d5b9116806350209a6287898860005b6040519080825280601f01601f191660200182016040528015610b0c576020820181803683370190505b50604051602401610a229493929190611062565b845460018601546001600160a01b03918216916339255d5b9116806362fc305e8789886000610ae2565b6001600160a01b038116811461070c57600080fd5b60008083601f840112610b7157600080fd5b5081356001600160401b03811115610b8857600080fd5b602083019150836020828501011115610ba057600080fd5b9250929050565b600080600080600080600080600060c08a8c031215610bc557600080fd5b8935610bd081610b4a565b985060208a0135610be081610b4a565b975060408a0135965060608a01356001600160401b0380821115610c0357600080fd5b610c0f8d838e01610b5f565b909850965060808c0135915080821115610c2857600080fd5b610c348d838e01610b5f565b909650945060a08c0135915080821115610c4d57600080fd5b50610c5a8c828d01610b5f565b915080935050809150509295985092959850929598565b60005b83811015610c8c578181015183820152602001610c74565b50506000910152565b60008151808452610cad816020860160208601610c71565b601f01601f19169290920160200192915050565b602081526000610cd46020830184610c95565b9392505050565b600080600080600080600060a0888a031215610cf657600080fd5b8735610d0181610b4a565b96506020880135610d1181610b4a565b95506040880135945060608801356001600160401b0380821115610d3457600080fd5b610d408b838c01610b5f565b909650945060808a0135915080821115610d5957600080fd5b50610d668a828b01610b5f565b989b979a50959850939692959293505050565b600060208284031215610d8b57600080fd5b8135610cd481610b4a565b600080600060608486031215610dab57600080fd5b8335610db681610b4a565b92506020840135610dc681610b4a565b929592945050506040919091013590565b80600b0b811461070c57600080fd5b60008060408385031215610df957600080fd5b8235610e0481610dd7565b946020939093013593505050565b600060208284031215610e2457600080fd5b5035919050565b6001600160a01b0391909116815260200190565b634e487b7160e01b600052600160045260246000fd5b6001600160a01b0393841681529183166020830152909116604082015260600190565b60008060008060808587031215610e8e57600080fd5b845193506020850151610ea081610dd7565b6040860151606090960151949790965092505050565b634e487b7160e01b600052601160045260246000fd5b600b82810b9082900b0360016001605f1b0319811260016001605f1b0382131715610ef957610ef9610eb6565b92915050565b600b81810b9083900b0160016001605f1b03811360016001605f1b031982121715610ef957610ef9610eb6565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038581168252848116602083015283166040820152608060608201819052600090610f7690830184610c95565b9695505050505050565b6001600160a01b0384168152606060208201819052600090610fa490830185610c95565b8281036040840152610f768185610c95565b600060208284031215610fc857600080fd5b81516001600160401b0380821115610fdf57600080fd5b818401915084601f830112610ff357600080fd5b81518181111561100557611005610f2c565b604051601f8201601f19908116603f0116810190838211818310171561102d5761102d610f2c565b8160405282815287602084870101111561104657600080fd5b611057836020830160208801610c71565b979650505050505050565b6001600160a01b03858116825284166020820152600b83900b6040820152608060608201819052600090610f7690830184610c9556fe556e737570706f727465642063616c6c6261636b202d204265666f7265204167556e737570706f727465642063616c6c6261636b202d20416674657220416772a2646970667358221220c18ed89ad2e92ba479f5d0cf3895fe32c414b3b634008b634ce6ba7fce5c848d64736f6c63430008100033";

type ABStreamConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ABStreamConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ABStream__factory extends ContractFactory {
  constructor(...args: ABStreamConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ABStream";
  }

  deploy(
    host: string,
    relay: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ABStream> {
    return super.deploy(host, relay, overrides || {}) as Promise<ABStream>;
  }
  getDeployTransaction(
    host: string,
    relay: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(host, relay, overrides || {});
  }
  attach(address: string): ABStream {
    return super.attach(address) as ABStream;
  }
  connect(signer: Signer): ABStream__factory {
    return super.connect(signer) as ABStream__factory;
  }
  static readonly contractName: "ABStream";
  public readonly contractName: "ABStream";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ABStreamInterface {
    return new utils.Interface(_abi) as ABStreamInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ABStream {
    return new Contract(address, _abi, signerOrProvider) as ABStream;
  }
}
