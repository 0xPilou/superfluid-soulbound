/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ABStream, ABStreamInterface } from "../ABStream";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISuperfluid",
        name: "_host",
        type: "address",
      },
      {
        internalType: "address",
        name: "_relay",
        type: "address",
      },
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "int96",
        name: "_baseFlow",
        type: "int96",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FORBIDDEN",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_PARAMETER",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperToken",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "afterAgreementCreated",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperToken",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "afterAgreementTerminated",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperToken",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "afterAgreementUpdated",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperToken",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "beforeAgreementCreated",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperToken",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "beforeAgreementTerminated",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperToken",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "beforeAgreementUpdated",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "boosts",
    outputs: [
      {
        components: [
          {
            internalType: "uint256[]",
            name: "dropIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "quantities",
            type: "uint256[]",
          },
        ],
        internalType: "struct ABStream.Condition",
        name: "condition",
        type: "tuple",
      },
      {
        internalType: "int96",
        name: "increase",
        type: "int96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cfaV1Lib",
    outputs: [
      {
        internalType: "contract ISuperfluid",
        name: "host",
        type: "address",
      },
      {
        internalType: "contract IConstantFlowAgreementV1",
        name: "cfa",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getABRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getABRelay",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getABToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
    ],
    name: "getFlow",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "int96",
        name: "flowRate",
        type: "int96",
      },
      {
        internalType: "uint256",
        name: "deposit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "owedDeposit",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ABRegistry",
        type: "address",
      },
    ],
    name: "setABRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ABRelay",
        type: "address",
      },
    ],
    name: "setABRelay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ABToken",
        type: "address",
      },
    ],
    name: "setABToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int96",
        name: "_baseFlow",
        type: "int96",
      },
      {
        internalType: "uint256",
        name: "_dropId",
        type: "uint256",
      },
    ],
    name: "setBaseFlow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_previousReceiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "_newReceiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_dropId",
        type: "uint256",
      },
    ],
    name: "updateStream",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200193e3803806200193e8339810160408190526200003491620001f7565b6200003f336200018e565b600081600b0b1315806200005a57506001600160a01b038416155b806200006d57506001600160a01b038316155b156200008c57604051632627b42d60e11b815260040160405180910390fd5b6040805180820182526001600160a01b0386168082529151635b69006f60e11b81527fa9214cc96615e0085d3bb077758db69497dc2dce3b2b1e97bc93c3d18d83efd360048201529091602083019163b6d200de90602401602060405180830381865afa15801562000102573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000128919062000265565b6001600160a01b039081169091528151600180549183166001600160a01b031992831617905560209092015160028054918316918416919091179055600480549482169483169490941790935560058054949093169316929092179055506200028c9050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381168114620001f457600080fd5b50565b600080600080608085870312156200020e57600080fd5b84516200021b81620001de565b60208601519094506200022e81620001de565b60408601519093506200024181620001de565b80925050606085015180600b0b81146200025a57600080fd5b939692955090935050565b6000602082840312156200027857600080fd5b81516200028581620001de565b9392505050565b6116a2806200029c6000396000f3fe608060405234801561001057600080fd5b50600436106100fc5760003560e01c8063230dbd291461010157806330d9c9151461012a578063434479461461013d5780634afd82e71461015257806353c11f991461017357806355586a3114610186578063581b73a5146101c05780635f9e7d77146101da578063715018a6146101ed578063884d1f40146101f55780638da5cb5b1461020857806391a84c60146102105780639516838214610223578063b1ec46f814610259578063b3624a3b1461026a578063d86ed3e51461027d578063ec4cbea614610290578063ef0dc837146102a3578063f2fde38b146102b4578063fa51453f146102c7575b600080fd5b61011461010f366004611088565b6102da565b60405161012191906111a2565b60405180910390f35b6101146101383660046111bc565b61032f565b61015061014b36600461125a565b610380565b005b61016561016036600461129b565b610426565b6040516101219291906112ef565b610114610181366004611088565b61050b565b6001546002546101a0916001600160a01b03908116911682565b604080516001600160a01b03938416815292909116602083015201610121565b6004546001600160a01b03165b604051610121919061133b565b6101146101e83660046111bc565b61055e565b6101506105c5565b6101146102033660046111bc565b6105d9565b6101cd61062a565b61015061021e36600461135e565b610639565b61023661023136600461138a565b6106b6565b60408051948552600b9390930b6020850152918301526060820152608001610121565b6005546001600160a01b03166101cd565b61015061027836600461138a565b610748565b61011461028b366004611088565b610799565b61015061029e36600461138a565b6107e9565b6003546001600160a01b03166101cd565b6101506102c236600461138a565b61083a565b6101506102d536600461138a565b6108b3565b60405162461bcd60e51b815260206004820152602e602482015260008051602061164d83398151915260448201526d19595b595b9d08155c19185d195960921b60648201526060906084015b60405180910390fd5b60405162461bcd60e51b815260206004820152602f602482015260008051602061162d83398151915260448201526e1c99595b595b9d0810dc99585d1959608a1b6064820152606090608401610326565b6005546001600160a01b031633146103ab5760405163036be76f60e61b815260040160405180910390fd5b600354604051634dcfa0af60e11b81526001600160a01b0390911690639b9f415e906103db90859060040161133b565b600060405180830381600087803b1580156103f557600080fd5b505af1158015610409573d6000803e3d6000fd5b505050506104178382610904565b6104218282610a15565b505050565b6008818154811061043657600080fd5b600091825260209182902060408051600390930290910180546060948102840185018352918301828152909450919284928492909184919084018282801561049d57602002820191906000526020600020905b815481526020019060010190808311610489575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156104f557602002820191906000526020600020905b8154815260200190600101908083116104e1575b50505091909252505050600290910154600b0b82565b60405162461bcd60e51b8152602060048201526031602482015260008051602061164d83398151915260448201527019595b595b9d0815195c9b5a5b985d1959607a1b6064820152606090608401610326565b60405162461bcd60e51b815260206004820152603360248201527f556e737570706f727465642063616c6c6261636b202d20204265666f7265204160448201527219dc99595b595b9d0815195c9b5a5b985d1959606a1b6064820152606090608401610326565b6105cd610ad5565b6105d76000610b34565b565b60405162461bcd60e51b815260206004820152602f602482015260008051602061162d83398151915260448201526e1c99595b595b9d081d5c19185d1959608a1b6064820152606090608401610326565b6000546001600160a01b031690565b6005546001600160a01b031633146106645760405163036be76f60e61b815260040160405180910390fd5b600082600b0b1361068857604051632627b42d60e11b815260040160405180910390fd5b600090815260066020526040902080546001600160601b0319166001600160601b0392909216919091179055565b600254600354604051631cd43d1160e31b81526000928392839283926001600160a01b039081169263e6a1e888926106f8929091169030908a906004016113a7565b608060405180830381865afa158015610715573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073991906113ca565b93509350935093509193509193565b610750610ad5565b6001600160a01b03811661077757604051632627b42d60e11b815260040160405180910390fd5b600580546001600160a01b0319166001600160a01b0392909216919091179055565b60405162461bcd60e51b815260206004820152602e602482015260008051602061164d83398151915260448201526d19595b595b9d0810dc99585d195960921b6064820152606090608401610326565b6107f1610ad5565b6001600160a01b03811661081857604051632627b42d60e11b815260040160405180910390fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b610842610ad5565b6001600160a01b0381166108a75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610326565b6108b081610b34565b50565b6108bb610ad5565b6001600160a01b0381166108e257604051632627b42d60e11b815260040160405180910390fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b306001600160a01b03831603610918575050565b600061092383610b84565b9050600061093084610c0c565b6001600160a01b03851660009081526007602090815260408083205487845260069092528220549293509091600b91820b91849161096f910b8661141e565b610979919061144b565b610983919061141e565b905080600b0b6000036109b1576003546109ac90600190309088906001600160a01b0316610d56565b6109d8565b600081600b0b13156109d8576003546109d89060019087906001600160a01b031684610d7c565b506001600160a01b0393909316600090815260076020526040902080546001600160601b0319166001600160601b03909416939093179092555050565b6001600160a01b038216610a27575050565b6000610a3283610b84565b90506000610a3f84610c0c565b6001600160a01b03851660009081526007602090815260408083205487845260069092528220549293509091600b91820b918491610a7e910b8661144b565b610a88919061144b565b610a92919061141e565b905082600b0b600003610aba576003546109ac9060019087906001600160a01b031684610d9c565b6003546109d89060019087906001600160a01b031684610d7c565b33610ade61062a565b6001600160a01b0316146105d75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610326565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600254600354604051631cd43d1160e31b815260009283926001600160a01b039182169263e6a1e88892610bc0921690309088906004016113a7565b608060405180830381865afa158015610bdd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0191906113ca565b509095945050505050565b600080805b600854811015610d4f57610d038460088381548110610c3257610c32611478565b906000526020600020906003020160000160405180604001604052908160008201805480602002602001604051908101604052809291908181526020018280548015610c9d57602002820191906000526020600020905b815481526020019060010190808311610c89575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610cf557602002820191906000526020600020905b815481526020019060010190808311610ce1575b505050505081525050610dbc565b15610d3f5760088181548110610d1b57610d1b611478565b6000918252602090912060026003909202010154610d3c90600b0b8361144b565b91505b610d488161148e565b9050610c11565b5092915050565b604080516000815260208101909152610d76908590859085908590610ebe565b50505050565b604080516000815260208101909152610d76908590859085908590610f9d565b604080516000815260208101909152610d76908590859085908590611001565b6000805b825151811015610eb25782602001518181518110610de057610de0611478565b6020908102919091010151600454845180516001600160a01b039092169163e04cc2d791889186908110610e1657610e16611478565b60200260200101516040518363ffffffff1660e01b8152600401610e4f9291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af1158015610e6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9291906114bd565b1015610ea2576000915050610eb8565b610eab8161148e565b9050610dc0565b50600190505b92915050565b845460018601546040805160008152602081019091526001600160a01b03928316926339255d5b921690819063b4b333c690610f039088908b908b90604481016114d6565b60408051808303601f1901815291815260208201805160e094851b6001600160e01b03909116179052519185901b6001600160e01b0319168252610f4e939250908690600401611514565b6000604051808303816000875af1158015610f6d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f95919081019061154a565b505050505050565b845460018601546001600160a01b03918216916339255d5b9116806350209a6287898860005b6040519080825280601f01601f191660200182016040528015610fed576020820181803683370190505b50604051602401610f0394939291906115f6565b845460018601546001600160a01b03918216916339255d5b9116806362fc305e8789886000610fc3565b6001600160a01b03811681146108b057600080fd5b60008083601f84011261105257600080fd5b5081356001600160401b0381111561106957600080fd5b60208301915083602082850101111561108157600080fd5b9250929050565b600080600080600080600080600060c08a8c0312156110a657600080fd5b89356110b18161102b565b985060208a01356110c18161102b565b975060408a0135965060608a01356001600160401b03808211156110e457600080fd5b6110f08d838e01611040565b909850965060808c013591508082111561110957600080fd5b6111158d838e01611040565b909650945060a08c013591508082111561112e57600080fd5b5061113b8c828d01611040565b915080935050809150509295985092959850929598565b60005b8381101561116d578181015183820152602001611155565b50506000910152565b6000815180845261118e816020860160208601611152565b601f01601f19169290920160200192915050565b6020815260006111b56020830184611176565b9392505050565b600080600080600080600060a0888a0312156111d757600080fd5b87356111e28161102b565b965060208801356111f28161102b565b95506040880135945060608801356001600160401b038082111561121557600080fd5b6112218b838c01611040565b909650945060808a013591508082111561123a57600080fd5b506112478a828b01611040565b989b979a50959850939692959293505050565b60008060006060848603121561126f57600080fd5b833561127a8161102b565b9250602084013561128a8161102b565b929592945050506040919091013590565b6000602082840312156112ad57600080fd5b5035919050565b600081518084526020808501945080840160005b838110156112e4578151875295820195908201906001016112c8565b509495945050505050565b604081526000835160408084015261130a60808401826112b4565b90506020850151603f1984830301606085015261132782826112b4565b9250505082600b0b60208301529392505050565b6001600160a01b0391909116815260200190565b80600b0b81146108b057600080fd5b6000806040838503121561137157600080fd5b823561137c8161134f565b946020939093013593505050565b60006020828403121561139c57600080fd5b81356111b58161102b565b6001600160a01b0393841681529183166020830152909116604082015260600190565b600080600080608085870312156113e057600080fd5b8451935060208501516113f28161134f565b6040860151606090960151949790965092505050565b634e487b7160e01b600052601160045260246000fd5b600b82810b9082900b0360016001605f1b0319811260016001605f1b0382131715610eb857610eb8611408565b600b81810b9083900b0160016001605f1b03811360016001605f1b031982121715610eb857610eb8611408565b634e487b7160e01b600052603260045260246000fd5b6000600182016114a0576114a0611408565b5060010190565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156114cf57600080fd5b5051919050565b6001600160a01b03858116825284811660208301528316604082015260806060820181905260009061150a90830184611176565b9695505050505050565b6001600160a01b038416815260606020820181905260009061153890830185611176565b828103604084015261150a8185611176565b60006020828403121561155c57600080fd5b81516001600160401b038082111561157357600080fd5b818401915084601f83011261158757600080fd5b815181811115611599576115996114a7565b604051601f8201601f19908116603f011681019083821181831017156115c1576115c16114a7565b816040528281528760208487010111156115da57600080fd5b6115eb836020830160208801611152565b979650505050505050565b6001600160a01b03858116825284166020820152600b83900b604082015260806060820181905260009061150a9083018461117656fe556e737570706f727465642063616c6c6261636b202d204265666f7265204167556e737570706f727465642063616c6c6261636b202d20416674657220416772a2646970667358221220404a4276a6fa40a92688acd1e30d5bf596b69bd8d22edf3e98f6d89426081b0164736f6c63430008100033";

type ABStreamConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ABStreamConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ABStream__factory extends ContractFactory {
  constructor(...args: ABStreamConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ABStream";
  }

  deploy(
    _host: string,
    _relay: string,
    _registry: string,
    _baseFlow: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ABStream> {
    return super.deploy(
      _host,
      _relay,
      _registry,
      _baseFlow,
      overrides || {}
    ) as Promise<ABStream>;
  }
  getDeployTransaction(
    _host: string,
    _relay: string,
    _registry: string,
    _baseFlow: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _host,
      _relay,
      _registry,
      _baseFlow,
      overrides || {}
    );
  }
  attach(address: string): ABStream {
    return super.attach(address) as ABStream;
  }
  connect(signer: Signer): ABStream__factory {
    return super.connect(signer) as ABStream__factory;
  }
  static readonly contractName: "ABStream";
  public readonly contractName: "ABStream";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ABStreamInterface {
    return new utils.Interface(_abi) as ABStreamInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ABStream {
    return new Contract(address, _abi, signerOrProvider) as ABStream;
  }
}
