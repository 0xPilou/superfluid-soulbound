/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ABWrapper, ABWrapperInterface } from "../ABWrapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_dropId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_messenger",
        type: "address",
      },
      {
        internalType: "address",
        name: "_relay",
        type: "address",
      },
      {
        internalType: "address",
        name: "_underlying",
        type: "address",
      },
      {
        internalType: "string",
        name: "_baseUri",
        type: "string",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dropId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_newBaseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "unwrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "wrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001d3738038062001d37833981016040819052620000349162000206565b8181600062000044838262000369565b50600162000053828262000369565b505050620000706200006a620000ce60201b60201c565b620000d2565b6007879055600a80546001600160a01b038089166001600160a01b031992831617909255600880548884169083161790556009805492871692909116919091179055600b620000c0848262000369565b505050505050505062000435565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200013c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200016957600080fd5b81516001600160401b038082111562000186576200018662000141565b604051601f8301601f19908116603f01168101908282118183101715620001b157620001b162000141565b81604052838152602092508683858801011115620001ce57600080fd5b600091505b83821015620001f25785820183015181830184015290820190620001d3565b600093810190920192909252949350505050565b600080600080600080600060e0888a0312156200022257600080fd5b87519650620002346020890162000124565b9550620002446040890162000124565b9450620002546060890162000124565b60808901519094506001600160401b03808211156200027257600080fd5b620002808b838c0162000157565b945060a08a01519150808211156200029757600080fd5b620002a58b838c0162000157565b935060c08a0151915080821115620002bc57600080fd5b50620002cb8a828b0162000157565b91505092959891949750929550565b600181811c90821680620002ef57607f821691505b6020821081036200031057634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200036457600081815260208120601f850160051c810160208610156200033f5750805b601f850160051c820191505b8181101562000360578281556001016200034b565b5050505b505050565b81516001600160401b0381111562000385576200038562000141565b6200039d81620003968454620002da565b8462000316565b602080601f831160018114620003d55760008415620003bc5750858301515b600019600386901b1c1916600185901b17855562000360565b600085815260208120601f198616915b828110156200040657888601518255948401946001909101908401620003e5565b5085821015620004255787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6118f280620004456000396000f3fe608060405234801561001057600080fd5b50600436106101075760003560e01c806301ffc9a71461010c57806306fdde0314610134578063081812fc14610149578063095ea7b31461017457806323b872dd146101895780632a778c9b1461019c57806342842e0e146101b357806355f804b3146101c65780636352211e146101d95780636f307dc3146101ec57806370a08231146101ff578063715018a6146102125780638da5cb5b1461021a57806395d89b4114610222578063a22cb4651461022a578063b88d4fde1461023d578063c87b56dd14610250578063de0e9a3e14610263578063e985e9c514610276578063ea598cb014610289578063f2fde38b1461029c575b600080fd5b61011f61011a3660046111eb565b6102af565b60405190151581526020015b60405180910390f35b61013c610301565b60405161012b9190611258565b61015c61015736600461126b565b610393565b6040516001600160a01b03909116815260200161012b565b6101876101823660046112a0565b6103ba565b005b6101876101973660046112ca565b6104d4565b6101a560075481565b60405190815260200161012b565b6101876101c13660046112ca565b610505565b6101876101d4366004611306565b610520565b61015c6101e736600461126b565b610535565b60095461015c906001600160a01b031681565b6101a561020d366004611377565b61056a565b6101876105f0565b61015c610604565b61013c610613565b610187610238366004611392565b610622565b61018761024b3660046113e4565b610631565b61013c61025e36600461126b565b610669565b61018761027136600461126b565b6106d0565b61011f6102843660046114bf565b61079b565b61018761029736600461126b565b6107c9565b6101876102aa366004611377565b610839565b60006001600160e01b031982166380ac58cd60e01b14806102e057506001600160e01b03198216635b5e139f60e01b145b806102fb57506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060008054610310906114f2565b80601f016020809104026020016040519081016040528092919081815260200182805461033c906114f2565b80156103895780601f1061035e57610100808354040283529160200191610389565b820191906000526020600020905b81548152906001019060200180831161036c57829003601f168201915b5050505050905090565b600061039e826108af565b506000908152600460205260409020546001600160a01b031690565b60006103c582610535565b9050806001600160a01b0316836001600160a01b0316036104375760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806104535750610453813361079b565b6104c55760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000606482015260840161042e565b6104cf83836108d4565b505050565b6104de3382610942565b6104fa5760405162461bcd60e51b815260040161042e9061152c565b6104cf8383836109a1565b6104cf83838360405180602001604052806000815250610631565b610528610b36565b600b6104cf8284836115c8565b6000818152600260205260408120546001600160a01b0316806102fb5760405162461bcd60e51b815260040161042e90611688565b60006001600160a01b0382166105d45760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161042e565b506001600160a01b031660009081526003602052604090205490565b6105f8610b36565b6106026000610b95565b565b6006546001600160a01b031690565b606060018054610310906114f2565b61062d338383610be7565b5050565b61063b3383610942565b6106575760405162461bcd60e51b815260040161042e9061152c565b61066384848484610cb1565b50505050565b6060610674826108af565b600061067e610ce4565b9050600081511161069e57604051806020016040528060008152506106c9565b806106a884610cf3565b6040516020016106b99291906116ba565b6040516020818303038152906040525b9392505050565b6040516323b872dd60e01b815230906323b872dd906106f7903390849086906004016116e9565b600060405180830381600087803b15801561071157600080fd5b505af1158015610725573d6000803e3d6000fd5b50506009546040516323b872dd60e01b81526001600160a01b0390911692506323b872dd915061075d903090339086906004016116e9565b600060405180830381600087803b15801561077757600080fd5b505af115801561078b573d6000803e3d6000fd5b5050505061079881610df3565b50565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6009546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906107fd903390309086906004016116e9565b600060405180830381600087803b15801561081757600080fd5b505af115801561082b573d6000803e3d6000fd5b505050506107983382610e88565b610841610b36565b6001600160a01b0381166108a65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161042e565b61079881610b95565b6108b881610ea2565b6107985760405162461bcd60e51b815260040161042e90611688565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061090982610535565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008061094e83610535565b9050806001600160a01b0316846001600160a01b031614806109755750610975818561079b565b806109995750836001600160a01b031661098e84610393565b6001600160a01b0316145b949350505050565b826001600160a01b03166109b482610535565b6001600160a01b031614610a185760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161042e565b6001600160a01b038216610a7a5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161042e565b610a85838383610ebf565b610a906000826108d4565b6001600160a01b0383166000908152600360205260408120805460019290610ab9908490611723565b90915550506001600160a01b0382166000908152600360205260408120805460019290610ae7908490611736565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03868116918217909255915184939187169160008051602061189d83398151915291a4505050565b33610b3f610604565b6001600160a01b0316146106025760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161042e565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031603610c445760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b604482015260640161042e565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610cbc8484846109a1565b610cc884848484610f75565b6106635760405162461bcd60e51b815260040161042e90611749565b6060600b8054610310906114f2565b606081600003610d1a5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610d445780610d2e8161179b565b9150610d3d9050600a836117ca565b9150610d1e565b6000816001600160401b03811115610d5e57610d5e6113ce565b6040519080825280601f01601f191660200182016040528015610d88576020820181803683370190505b5090505b841561099957610d9d600183611723565b9150610daa600a866117de565b610db5906030611736565b60f81b818381518110610dca57610dca6117f2565b60200101906001600160f81b031916908160001a905350610dec600a866117ca565b9450610d8c565b6000610dfe82610535565b9050610e0c81600084610ebf565b610e176000836108d4565b6001600160a01b0381166000908152600360205260408120805460019290610e40908490611723565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b0384169060008051602061189d833981519152908390a45050565b61062d828260405180602001604052806000815250611076565b6000908152600260205260409020546001600160a01b0316151590565b600a546008546007546040516001600160a01b0393841693633dbb202b931691610eef91889188916024016116e9565b60408051601f198184030181529181526020820180516001600160e01b0316632a73d54560e21b1790525160e084901b6001600160e01b0319168152610f3e9291906298968090600401611808565b600060405180830381600087803b158015610f5857600080fd5b505af1158015610f6c573d6000803e3d6000fd5b50505050505050565b60006001600160a01b0384163b1561106b57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610fb9903390899088908890600401611842565b6020604051808303816000875af1925050508015610ff4575060408051601f3d908101601f19168201909252610ff19181019061187f565b60015b611051573d808015611022576040519150601f19603f3d011682016040523d82523d6000602084013e611027565b606091505b5080516000036110495760405162461bcd60e51b815260040161042e90611749565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610999565b506001949350505050565b61108083836110a9565b61108d6000848484610f75565b6104cf5760405162461bcd60e51b815260040161042e90611749565b6001600160a01b0382166110ff5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161042e565b61110881610ea2565b156111545760405162461bcd60e51b815260206004820152601c60248201527b115490cdcc8c4e881d1bdad95b88185b1c9958591e481b5a5b9d195960221b604482015260640161042e565b61116060008383610ebf565b6001600160a01b0382166000908152600360205260408120805460019290611189908490611736565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b038616908117909155905183929060008051602061189d833981519152908290a45050565b6001600160e01b03198116811461079857600080fd5b6000602082840312156111fd57600080fd5b81356106c9816111d5565b60005b8381101561122357818101518382015260200161120b565b50506000910152565b60008151808452611244816020860160208601611208565b601f01601f19169290920160200192915050565b6020815260006106c9602083018461122c565b60006020828403121561127d57600080fd5b5035919050565b80356001600160a01b038116811461129b57600080fd5b919050565b600080604083850312156112b357600080fd5b6112bc83611284565b946020939093013593505050565b6000806000606084860312156112df57600080fd5b6112e884611284565b92506112f660208501611284565b9150604084013590509250925092565b6000806020838503121561131957600080fd5b82356001600160401b038082111561133057600080fd5b818501915085601f83011261134457600080fd5b81358181111561135357600080fd5b86602082850101111561136557600080fd5b60209290920196919550909350505050565b60006020828403121561138957600080fd5b6106c982611284565b600080604083850312156113a557600080fd5b6113ae83611284565b9150602083013580151581146113c357600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156113fa57600080fd5b61140385611284565b935061141160208601611284565b92506040850135915060608501356001600160401b038082111561143457600080fd5b818701915087601f83011261144857600080fd5b81358181111561145a5761145a6113ce565b604051601f8201601f19908116603f01168101908382118183101715611482576114826113ce565b816040528281528a602084870101111561149b57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156114d257600080fd5b6114db83611284565b91506114e960208401611284565b90509250929050565b600181811c9082168061150657607f821691505b60208210810361152657634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b601f8211156104cf57600081815260208120601f850160051c810160208610156115a15750805b601f850160051c820191505b818110156115c0578281556001016115ad565b505050505050565b6001600160401b038311156115df576115df6113ce565b6115f3836115ed83546114f2565b8361157a565b6000601f841160018114611627576000851561160f5750838201355b600019600387901b1c1916600186901b178355611681565b600083815260209020601f19861690835b828110156116585786850135825560209485019460019092019101611638565b50868210156116755760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b602080825260189082015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604082015260600190565b600083516116cc818460208801611208565b8351908301906116e0818360208801611208565b01949350505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b634e487b7160e01b600052601160045260246000fd5b818103818111156102fb576102fb61170d565b808201808211156102fb576102fb61170d565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6000600182016117ad576117ad61170d565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826117d9576117d96117b4565b500490565b6000826117ed576117ed6117b4565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038416815260606020820181905260009061182c9083018561122c565b905063ffffffff83166040830152949350505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906118759083018461122c565b9695505050505050565b60006020828403121561189157600080fd5b81516106c9816111d556feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220a4d13ddefe5af2a152f236e8a558b791b5729848eafe09a5683bc1d3da539d8264736f6c63430008100033";

type ABWrapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ABWrapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ABWrapper__factory extends ContractFactory {
  constructor(...args: ABWrapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ABWrapper";
  }

  deploy(
    _dropId: BigNumberish,
    _messenger: string,
    _relay: string,
    _underlying: string,
    _baseUri: string,
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ABWrapper> {
    return super.deploy(
      _dropId,
      _messenger,
      _relay,
      _underlying,
      _baseUri,
      _name,
      _symbol,
      overrides || {}
    ) as Promise<ABWrapper>;
  }
  getDeployTransaction(
    _dropId: BigNumberish,
    _messenger: string,
    _relay: string,
    _underlying: string,
    _baseUri: string,
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _dropId,
      _messenger,
      _relay,
      _underlying,
      _baseUri,
      _name,
      _symbol,
      overrides || {}
    );
  }
  attach(address: string): ABWrapper {
    return super.attach(address) as ABWrapper;
  }
  connect(signer: Signer): ABWrapper__factory {
    return super.connect(signer) as ABWrapper__factory;
  }
  static readonly contractName: "ABWrapper";
  public readonly contractName: "ABWrapper";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ABWrapperInterface {
    return new utils.Interface(_abi) as ABWrapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ABWrapper {
    return new Contract(address, _abi, signerOrProvider) as ABWrapper;
  }
}
