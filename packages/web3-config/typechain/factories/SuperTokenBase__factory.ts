/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  SuperTokenBase,
  SuperTokenBaseInterface,
} from "../SuperTokenBase";

const _abi = [
  {
    inputs: [],
    name: "Initialized",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "initialAddress",
        type: "address",
      },
    ],
    name: "initializeProxy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

export class SuperTokenBase__factory {
  static readonly abi = _abi;
  static createInterface(): SuperTokenBaseInterface {
    return new utils.Interface(_abi) as SuperTokenBaseInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SuperTokenBase {
    return new Contract(address, _abi, signerOrProvider) as SuperTokenBase;
  }
}
