/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MyNFT, MyNFTInterface } from "../MyNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "_optimisticContractAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_ABRelay",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "AB_RELAY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_MINT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "subscriber",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "mintNft",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600060065560646007553480156200001b57600080fd5b50604051620017d6380380620017d68339810160408190526200003e916200017b565b838360006200004e838262000299565b5060016200005d828262000299565b5050600980546001600160a01b039485166001600160a01b03199182161790915560088054939094169216919091179091555062000365915050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000c157600080fd5b81516001600160401b0380821115620000de57620000de62000099565b604051601f8301601f19908116603f0116810190828211818310171562000109576200010962000099565b816040528381526020925086838588010111156200012657600080fd5b600091505b838210156200014a57858201830151818301840152908201906200012b565b600093810190920192909252949350505050565b80516001600160a01b03811681146200017657600080fd5b919050565b600080600080608085870312156200019257600080fd5b84516001600160401b0380821115620001aa57600080fd5b620001b888838901620000af565b95506020870151915080821115620001cf57600080fd5b50620001de87828801620000af565b935050620001ef604086016200015e565b9150620001ff606086016200015e565b905092959194509250565b600181811c908216806200021f57607f821691505b6020821081036200024057634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200029457600081815260208120601f850160051c810160208610156200026f5750805b601f850160051c820191505b8181101562000290578281556001016200027b565b5050505b505050565b81516001600160401b03811115620002b557620002b562000099565b620002cd81620002c684546200020a565b8462000246565b602080601f831160018114620003055760008415620002ec5750858301515b600019600386901b1c1916600185901b17855562000290565b600085815260208120601f198616915b82811015620003365788860151825594840194600190910190840162000315565b5085821015620003555787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61146180620003756000396000f3fe608060405234801561001057600080fd5b50600436106100db5760003560e01c806301ffc9a7146100e057806306fdde0314610108578063081812fc1461011d578063095ea7b31461014857806323b872dd1461015d57806342842e0e1461017057806344bf0b29146101835780636352211e1461019657806370a08231146101a957806395d89b41146101ca5780639659867e146101d2578063a22cb465146101db578063b88d4fde146101ee578063c87b56dd14610201578063d1194e2b14610214578063e985e9c514610227578063f0292a031461023a575b600080fd5b6100f36100ee366004610efd565b610243565b60405190151581526020015b60405180910390f35b610110610295565b6040516100ff9190610f6a565b61013061012b366004610f7d565b610327565b6040516001600160a01b0390911681526020016100ff565b61015b610156366004610fb2565b61034e565b005b61015b61016b366004610fdc565b610468565b61015b61017e366004610fdc565b610499565b600854610130906001600160a01b031681565b6101306101a4366004610f7d565b6104b4565b6101bc6101b7366004611018565b6104e9565b6040519081526020016100ff565b61011061056f565b6101bc60065481565b61015b6101e9366004611033565b61057e565b61015b6101fc366004611085565b61058d565b61011061020f366004610f7d565b6105c5565b61015b610222366004610fb2565b610639565b6100f3610235366004611160565b6106de565b6101bc60075481565b60006001600160e01b031982166380ac58cd60e01b148061027457506001600160e01b03198216635b5e139f60e01b145b8061028f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102a490611193565b80601f01602080910402602001604051908101604052809291908181526020018280546102d090611193565b801561031d5780601f106102f25761010080835404028352916020019161031d565b820191906000526020600020905b81548152906001019060200180831161030057829003601f168201915b5050505050905090565b60006103328261070c565b506000908152600460205260409020546001600160a01b031690565b6000610359826104b4565b9050806001600160a01b0316836001600160a01b0316036103cb5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806103e757506103e781336106de565b6104595760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c000060648201526084016103c2565b6104638383610734565b505050565b61047233826107a2565b61048e5760405162461bcd60e51b81526004016103c2906111cd565b610463838383610801565b6104638383836040518060200160405280600081525061058d565b6000818152600260205260408120546001600160a01b03168061028f5760405162461bcd60e51b81526004016103c29061121b565b60006001600160a01b0382166105535760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016103c2565b506001600160a01b031660009081526003602052604090205490565b6060600180546102a490611193565b610589338383610996565b5050565b61059733836107a2565b6105b35760405162461bcd60e51b81526004016103c2906111cd565b6105bf84848484610a60565b50505050565b60606105d08261070c565b60006105e760408051602081019091526000815290565b905060008151116106075760405180602001604052806000815250610632565b8061061184610a93565b60405160200161062292919061124d565b6040516020818303038152906040525b9392505050565b6007548160065461064a9190611292565b111561068e5760405162461bcd60e51b81526020600482015260136024820152721b9bdd08195b9bdd59da1d081d1bc81b5a5b9d606a1b60448201526064016103c2565b60005b818110156106c2576106b083826006546106ab9190611292565b610b93565b806106ba816112a5565b915050610691565b5080600660008282546106d59190611292565b90915550505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61071581610bad565b6107315760405162461bcd60e51b81526004016103c29061121b565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610769826104b4565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000806107ae836104b4565b9050806001600160a01b0316846001600160a01b031614806107d557506107d581856106de565b806107f95750836001600160a01b03166107ee84610327565b6001600160a01b0316145b949350505050565b826001600160a01b0316610814826104b4565b6001600160a01b0316146108785760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016103c2565b6001600160a01b0382166108da5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103c2565b6108e5838383610bca565b6108f0600082610734565b6001600160a01b03831660009081526003602052604081208054600192906109199084906112be565b90915550506001600160a01b0382166000908152600360205260408120805460019290610947908490611292565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03868116918217909255915184939187169160008051602061140c83398151915291a4505050565b816001600160a01b0316836001600160a01b0316036109f35760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b60448201526064016103c2565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610a6b848484610801565b610a7784848484610c87565b6105bf5760405162461bcd60e51b81526004016103c2906112d1565b606081600003610aba5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610ae45780610ace816112a5565b9150610add9050600a83611339565b9150610abe565b6000816001600160401b03811115610afe57610afe61106f565b6040519080825280601f01601f191660200182016040528015610b28576020820181803683370190505b5090505b84156107f957610b3d6001836112be565b9150610b4a600a8661134d565b610b55906030611292565b60f81b818381518110610b6a57610b6a611361565b60200101906001600160f81b031916908160001a905350610b8c600a86611339565b9450610b2c565b610589828260405180602001604052806000815250610d88565b6000908152600260205260409020546001600160a01b0316151590565b6009546008546040516001600160a01b03868116602483015285811660448301526064820185905292831692633dbb202b92169060840160408051601f198184030181529181526020820180516001600160e01b0316632a73d54560e21b1790525160e084901b6001600160e01b0319168152610c509291906298968190600401611377565b600060405180830381600087803b158015610c6a57600080fd5b505af1158015610c7e573d6000803e3d6000fd5b50505050505050565b60006001600160a01b0384163b15610d7d57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610ccb9033908990889088906004016113b1565b6020604051808303816000875af1925050508015610d06575060408051601f3d908101601f19168201909252610d03918101906113ee565b60015b610d63573d808015610d34576040519150601f19603f3d011682016040523d82523d6000602084013e610d39565b606091505b508051600003610d5b5760405162461bcd60e51b81526004016103c2906112d1565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506107f9565b506001949350505050565b610d928383610dbb565b610d9f6000848484610c87565b6104635760405162461bcd60e51b81526004016103c2906112d1565b6001600160a01b038216610e115760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103c2565b610e1a81610bad565b15610e665760405162461bcd60e51b815260206004820152601c60248201527b115490cdcc8c4e881d1bdad95b88185b1c9958591e481b5a5b9d195960221b60448201526064016103c2565b610e7260008383610bca565b6001600160a01b0382166000908152600360205260408120805460019290610e9b908490611292565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b038616908117909155905183929060008051602061140c833981519152908290a45050565b6001600160e01b03198116811461073157600080fd5b600060208284031215610f0f57600080fd5b813561063281610ee7565b60005b83811015610f35578181015183820152602001610f1d565b50506000910152565b60008151808452610f56816020860160208601610f1a565b601f01601f19169290920160200192915050565b6020815260006106326020830184610f3e565b600060208284031215610f8f57600080fd5b5035919050565b80356001600160a01b0381168114610fad57600080fd5b919050565b60008060408385031215610fc557600080fd5b610fce83610f96565b946020939093013593505050565b600080600060608486031215610ff157600080fd5b610ffa84610f96565b925061100860208501610f96565b9150604084013590509250925092565b60006020828403121561102a57600080fd5b61063282610f96565b6000806040838503121561104657600080fd5b61104f83610f96565b91506020830135801515811461106457600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561109b57600080fd5b6110a485610f96565b93506110b260208601610f96565b92506040850135915060608501356001600160401b03808211156110d557600080fd5b818701915087601f8301126110e957600080fd5b8135818111156110fb576110fb61106f565b604051601f8201601f19908116603f011681019083821181831017156111235761112361106f565b816040528281528a602084870101111561113c57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561117357600080fd5b61117c83610f96565b915061118a60208401610f96565b90509250929050565b600181811c908216806111a757607f821691505b6020821081036111c757634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b602080825260189082015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604082015260600190565b6000835161125f818460208801610f1a565b835190830190611273818360208801610f1a565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561028f5761028f61127c565b6000600182016112b7576112b761127c565b5060010190565b8181038181111561028f5761028f61127c565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b60008261134857611348611323565b500490565b60008261135c5761135c611323565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038416815260606020820181905260009061139b90830185610f3e565b905063ffffffff83166040830152949350505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906113e490830184610f3e565b9695505050505050565b60006020828403121561140057600080fd5b815161063281610ee756feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212203db9b247aad2d8dcf2b7dcf219cdd42c8512286db7c9360fa9a1519b00e3263d64736f6c63430008100033";

type MyNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyNFT__factory extends ContractFactory {
  constructor(...args: MyNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MyNFT";
  }

  deploy(
    _name: string,
    _symbol: string,
    _optimisticContractAddress: string,
    _ABRelay: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MyNFT> {
    return super.deploy(
      _name,
      _symbol,
      _optimisticContractAddress,
      _ABRelay,
      overrides || {}
    ) as Promise<MyNFT>;
  }
  getDeployTransaction(
    _name: string,
    _symbol: string,
    _optimisticContractAddress: string,
    _ABRelay: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _optimisticContractAddress,
      _ABRelay,
      overrides || {}
    );
  }
  attach(address: string): MyNFT {
    return super.attach(address) as MyNFT;
  }
  connect(signer: Signer): MyNFT__factory {
    return super.connect(signer) as MyNFT__factory;
  }
  static readonly contractName: "MyNFT";
  public readonly contractName: "MyNFT";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyNFTInterface {
    return new utils.Interface(_abi) as MyNFTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MyNFT {
    return new Contract(address, _abi, signerOrProvider) as MyNFT;
  }
}
