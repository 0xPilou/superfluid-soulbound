/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { UUPSProxy, UUPSProxyInterface } from "../UUPSProxy";

const _abi = [
  {
    inputs: [],
    name: "Initialized",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "initialAddress",
        type: "address",
      },
    ],
    name: "initializeProxy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061028e806100206000396000f3fe6080604052600436106100225760003560e01c80634a0687ef1461003b57610031565b366100315761002f610064565b005b610039610064565b005b34801561004757600080fd5b50610062600480360381019061005d919061022b565b61007e565b005b61006c610177565b61007c610077610179565b6101a2565b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100e4576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16610104610179565b73ffffffffffffffffffffffffffffffffffffffff1614610151576040517f5daa87a000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5550565b565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54905090565b3660008037600080366000845af43d6000803e80600081146101c3573d6000f35b3d6000fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101f8826101cd565b9050919050565b610208816101ed565b811461021357600080fd5b50565b600081359050610225816101ff565b92915050565b600060208284031215610241576102406101c8565b5b600061024f84828501610216565b9150509291505056fea2646970667358221220f8180c4e5bb19e6133319e87f6c0e98048cc41d8430939f0f7e53633d59dd07264736f6c63430008100033";

type UUPSProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UUPSProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UUPSProxy__factory extends ContractFactory {
  constructor(...args: UUPSProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "UUPSProxy";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UUPSProxy> {
    return super.deploy(overrides || {}) as Promise<UUPSProxy>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UUPSProxy {
    return super.attach(address) as UUPSProxy;
  }
  connect(signer: Signer): UUPSProxy__factory {
    return super.connect(signer) as UUPSProxy__factory;
  }
  static readonly contractName: "UUPSProxy";
  public readonly contractName: "UUPSProxy";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UUPSProxyInterface {
    return new utils.Interface(_abi) as UUPSProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UUPSProxy {
    return new Contract(address, _abi, signerOrProvider) as UUPSProxy;
  }
}
