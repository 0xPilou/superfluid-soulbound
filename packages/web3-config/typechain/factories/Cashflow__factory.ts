/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Cashflow, CashflowInterface } from "../Cashflow";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISuperfluid",
        name: "host",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperToken",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "afterAgreementCreated",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperToken",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "afterAgreementTerminated",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperToken",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "afterAgreementUpdated",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperToken",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "beforeAgreementCreated",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperToken",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "beforeAgreementTerminated",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperToken",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "beforeAgreementUpdated",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cfaV1Lib",
    outputs: [
      {
        internalType: "contract ISuperfluid",
        name: "host",
        type: "address",
      },
      {
        internalType: "contract IConstantFlowAgreementV1",
        name: "cfa",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "int96",
        name: "flowRate",
        type: "int96",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "editNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "flowRates",
    outputs: [
      {
        internalType: "int96",
        name: "",
        type: "int96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAcceptedToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
    ],
    name: "getFlow",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "int96",
        name: "flowRate",
        type: "int96",
      },
      {
        internalType: "uint256",
        name: "deposit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "owedDeposit",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNFT",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "int96",
        name: "flowRate",
        type: "int96",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "issueNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_acceptedToken",
        type: "address",
      },
    ],
    name: "setAcceptedToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nft",
        type: "address",
      },
    ],
    name: "setNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldReceiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "newReceiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "updateHolder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600480546001600160a01b0319167342000000000000000000000000000000000000071790553480156200003757600080fd5b50604051620016d9380380620016d98339810160408190526200005a91620001c5565b62000065336200015c565b6001600160a01b0381166200007e576200007e620001ec565b6040805180820182526001600160a01b0383168082529151635b69006f60e11b81527fa9214cc96615e0085d3bb077758db69497dc2dce3b2b1e97bc93c3d18d83efd360048201529091602083019163b6d200de90602401602060405180830381865afa158015620000f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200011a9190620001c5565b6001600160a01b039081169091528151600180546001600160a01b03199081169284169290921790556020909201516002805490931691161790555062000202565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381168114620001c257600080fd5b50565b600060208284031215620001d857600080fd5b8151620001e581620001ac565b9392505050565b634e487b7160e01b600052600160045260246000fd5b6114c780620002126000396000f3fe608060405234801561001057600080fd5b50600436106100f15760003560e01c806306fa0220146100f6578063230dbd291461010b57806330d9c915146101345780634ab847711461014757806353c11f991461015a57806355586a311461016d5780635f9e7d77146101a75780637141ca4a146101ba578063715018a6146101cd5780637487f528146101d557806379bcb8df146101e8578063884d1f401461021e57806388a6360e146102315780638da5cb5b1461024b5780639516838214610253578063a18f4ba014610289578063d86ed3e51461029a578063f2fde38b146102ad578063f56e9c66146102c0575b600080fd5b610109610104366004610ec4565b6102d3565b005b61011e610119366004610f4d565b61037e565b60405161012b9190611067565b60405180910390f35b61011e610142366004611081565b6103d3565b61010961015536600461111f565b610424565b61011e610168366004610f4d565b61055b565b600154600254610187916001600160a01b03908116911682565b604080516001600160a01b0393841681529290911660208301520161012b565b61011e6101b5366004611081565b6105ae565b6101096101c836600461114f565b610615565b6101096106e9565b6101096101e3366004611191565b6106fd565b61020b6101f63660046111ae565b600660205260009081526040902054600b0b81565b604051600b9190910b815260200161012b565b61011e61022c366004611081565b61073d565b6005546001600160a01b03165b60405161012b91906111c7565b61023e61078e565b610266610261366004611191565b61079d565b60408051948552600b9390930b602085015291830152606082015260800161012b565b6003546001600160a01b031661023e565b61011e6102a8366004610f4d565b61082f565b6101096102bb366004611191565b61087f565b6101096102ce366004611191565b6108f8565b6004546001600160a01b03163314801561036557506005546004805460408051636e296e4560e01b815290516001600160a01b039485169490921692636e296e459282820192602092908290030181865afa158015610336573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035a91906111db565b6001600160a01b0316145b61036e57600080fd5b610379838383610922565b505050565b60405162461bcd60e51b815260206004820152602e602482015260008051602061147283398151915260448201526d19595b595b9d08155c19185d195960921b60648201526060906084015b60405180910390fd5b60405162461bcd60e51b815260206004820152602f602482015260008051602061145283398151915260448201526e1c99595b595b9d0810dc99585d1959608a1b60648201526060906084016103ca565b6004546001600160a01b0316331480156104b657506005546004805460408051636e296e4560e01b815290516001600160a01b039485169490921692636e296e459282820192602092908290030181865afa158015610487573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ab91906111db565b6001600160a01b0316145b6104bf57600080fd5b600354604051634dcfa0af60e11b81526001600160a01b0390911690639b9f415e906104ef9085906004016111c7565b600060405180830381600087803b15801561050957600080fd5b505af115801561051d573d6000803e3d6000fd5b50505060008281526006602052604090205461053e91508490600b0b610a55565b600081815260066020526040902054610379908390600b0b610b48565b60405162461bcd60e51b8152602060048201526031602482015260008051602061147283398151915260448201527019595b595b9d0815195c9b5a5b985d1959607a1b60648201526060906084016103ca565b60405162461bcd60e51b815260206004820152603360248201527f556e737570706f727465642063616c6c6261636b202d20204265666f7265204160448201527219dc99595b595b9d0815195c9b5a5b985d1959606a1b60648201526060906084016103ca565b600082600b0b12156106665760405162461bcd60e51b815260206004820152601a602482015279666c6f7752617465206d75737420626520706f7369746976652160301b60448201526064016103ca565b81600b0b6000036106935760008381526006602052604090205461068e908290600b0b610a55565b6106ba565b6000838152600660205260409020546106ba9082906106b590600b0b8561120e565b610b48565b5060009182526006602052604090912080546001600160601b0319166001600160601b03909216919091179055565b6106f1610c1e565b6106fb6000610c7d565b565b610705610c1e565b6001600160a01b03811661071b5761071b611241565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b60405162461bcd60e51b815260206004820152602f602482015260008051602061145283398151915260448201526e1c99595b595b9d081d5c19185d1959608a1b60648201526060906084016103ca565b6000546001600160a01b031690565b600254600354604051631cd43d1160e31b81526000928392839283926001600160a01b039081169263e6a1e888926107df929091169030908a90600401611257565b608060405180830381865afa1580156107fc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610820919061127a565b93509350935093509193509193565b60405162461bcd60e51b815260206004820152602e602482015260008051602061147283398151915260448201526d19595b595b9d0810dc99585d195960921b60648201526060906084016103ca565b610887610c1e565b6001600160a01b0381166108ec5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103ca565b6108f581610c7d565b50565b610900610c1e565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b306001600160a01b038416036109735760405162461bcd60e51b8152602060048201526016602482015275497373756520746f2061206e6577206164647265737360501b60448201526064016103ca565b600082600b0b136109c45760405162461bcd60e51b815260206004820152601b60248201527a666c6f775261746565206d75737420626520706f7369746976652160281b60448201526064016103ca565b600354604051634dcfa0af60e11b81526001600160a01b0390911690639b9f415e906109f49086906004016111c7565b600060405180830381600087803b158015610a0e57600080fd5b505af1158015610a22573d6000803e3d6000fd5b50505060009182525060066020526040902080546001600160601b0319166001600160601b039290921691909117905550565b306001600160a01b03831603610a69575050565b600254600354604051631cd43d1160e31b81526000926001600160a01b039081169263e6a1e88892610aa5929091169030908890600401611257565b608060405180830381865afa158015610ac2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae6919061127a565b505091505081600b0b81600b0b03610b145760035461037990600190309086906001600160a01b0316610ccd565b81600b0b81600b0b1315610379576003546103799084906001600160a01b0316610b3e858561120e565b6001929190610cf3565b6001600160a01b038216610b5a575050565b600254600354604051631cd43d1160e31b81526000926001600160a01b039081169263e6a1e88892610b96929091169030908890600401611257565b608060405180830381865afa158015610bb3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd7919061127a565b505091505080600b0b600003610c02576003546103799060019085906001600160a01b031685610d13565b6003546103799084906001600160a01b0316610b3e85856112b8565b33610c2761078e565b6001600160a01b0316146106fb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103ca565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516000815260208101909152610ced908590859085908590610d33565b50505050565b604080516000815260208101909152610ced908590859085908590610e12565b604080516000815260208101909152610ced908590859085908590610e76565b845460018601546040805160008152602081019091526001600160a01b03928316926339255d5b921690819063b4b333c690610d789088908b908b90604481016112fb565b60408051808303601f1901815291815260208201805160e094851b6001600160e01b03909116179052519185901b6001600160e01b0319168252610dc3939250908690600401611339565b6000604051808303816000875af1158015610de2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e0a919081019061136f565b505050505050565b845460018601546001600160a01b03918216916339255d5b9116806350209a6287898860005b6040519080825280601f01601f191660200182016040528015610e62576020820181803683370190505b50604051602401610d78949392919061141b565b845460018601546001600160a01b03918216916339255d5b9116806362fc305e8789886000610e38565b6001600160a01b03811681146108f557600080fd5b80600b0b81146108f557600080fd5b600080600060608486031215610ed957600080fd5b8335610ee481610ea0565b92506020840135610ef481610eb5565b929592945050506040919091013590565b60008083601f840112610f1757600080fd5b5081356001600160401b03811115610f2e57600080fd5b602083019150836020828501011115610f4657600080fd5b9250929050565b600080600080600080600080600060c08a8c031215610f6b57600080fd5b8935610f7681610ea0565b985060208a0135610f8681610ea0565b975060408a0135965060608a01356001600160401b0380821115610fa957600080fd5b610fb58d838e01610f05565b909850965060808c0135915080821115610fce57600080fd5b610fda8d838e01610f05565b909650945060a08c0135915080821115610ff357600080fd5b506110008c828d01610f05565b915080935050809150509295985092959850929598565b60005b8381101561103257818101518382015260200161101a565b50506000910152565b60008151808452611053816020860160208601611017565b601f01601f19169290920160200192915050565b60208152600061107a602083018461103b565b9392505050565b600080600080600080600060a0888a03121561109c57600080fd5b87356110a781610ea0565b965060208801356110b781610ea0565b95506040880135945060608801356001600160401b03808211156110da57600080fd5b6110e68b838c01610f05565b909650945060808a01359150808211156110ff57600080fd5b5061110c8a828b01610f05565b989b979a50959850939692959293505050565b60008060006060848603121561113457600080fd5b833561113f81610ea0565b92506020840135610ef481610ea0565b60008060006060848603121561116457600080fd5b83359250602084013561117681610eb5565b9150604084013561118681610ea0565b809150509250925092565b6000602082840312156111a357600080fd5b813561107a81610ea0565b6000602082840312156111c057600080fd5b5035919050565b6001600160a01b0391909116815260200190565b6000602082840312156111ed57600080fd5b815161107a81610ea0565b634e487b7160e01b600052601160045260246000fd5b600b82810b9082900b0360016001605f1b0319811260016001605f1b038213171561123b5761123b6111f8565b92915050565b634e487b7160e01b600052600160045260246000fd5b6001600160a01b0393841681529183166020830152909116604082015260600190565b6000806000806080858703121561129057600080fd5b8451935060208501516112a281610eb5565b6040860151606090960151949790965092505050565b600b81810b9083900b0160016001605f1b03811360016001605f1b03198212171561123b5761123b6111f8565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03858116825284811660208301528316604082015260806060820181905260009061132f9083018461103b565b9695505050505050565b6001600160a01b038416815260606020820181905260009061135d9083018561103b565b828103604084015261132f818561103b565b60006020828403121561138157600080fd5b81516001600160401b038082111561139857600080fd5b818401915084601f8301126113ac57600080fd5b8151818111156113be576113be6112e5565b604051601f8201601f19908116603f011681019083821181831017156113e6576113e66112e5565b816040528281528760208487010111156113ff57600080fd5b611410836020830160208801611017565b979650505050505050565b6001600160a01b03858116825284166020820152600b83900b604082015260806060820181905260009061132f9083018461103b56fe556e737570706f727465642063616c6c6261636b202d204265666f7265204167556e737570706f727465642063616c6c6261636b202d20416674657220416772a264697066735822122085b4105d35de167928732c96e5815c32338df7522593e4a2fd272855c7e1bb1664736f6c63430008100033";

type CashflowConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CashflowConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Cashflow__factory extends ContractFactory {
  constructor(...args: CashflowConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Cashflow";
  }

  deploy(
    host: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Cashflow> {
    return super.deploy(host, overrides || {}) as Promise<Cashflow>;
  }
  getDeployTransaction(
    host: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(host, overrides || {});
  }
  attach(address: string): Cashflow {
    return super.attach(address) as Cashflow;
  }
  connect(signer: Signer): Cashflow__factory {
    return super.connect(signer) as Cashflow__factory;
  }
  static readonly contractName: "Cashflow";
  public readonly contractName: "Cashflow";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CashflowInterface {
    return new utils.Interface(_abi) as CashflowInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Cashflow {
    return new Contract(address, _abi, signerOrProvider) as Cashflow;
  }
}
