/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface IABStreamInterface extends utils.Interface {
  contractName: "IABStream";
  functions: {
    "getABRelay()": FunctionFragment;
    "getABToken()": FunctionFragment;
    "getFlow(address)": FunctionFragment;
    "initStream(int96,uint256)": FunctionFragment;
    "setABToken(address)": FunctionFragment;
    "updateStream(address,address,uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "getABRelay",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getABToken",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "getFlow", values: [string]): string;
  encodeFunctionData(
    functionFragment: "initStream",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "setABToken", values: [string]): string;
  encodeFunctionData(
    functionFragment: "updateStream",
    values: [string, string, BigNumberish]
  ): string;

  decodeFunctionResult(functionFragment: "getABRelay", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getABToken", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getFlow", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "initStream", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "setABToken", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "updateStream",
    data: BytesLike
  ): Result;

  events: {};
}

export interface IABStream extends BaseContract {
  contractName: "IABStream";
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IABStreamInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    getABRelay(overrides?: CallOverrides): Promise<[string]>;

    "getABRelay()"(overrides?: CallOverrides): Promise<[string]>;

    getABToken(overrides?: CallOverrides): Promise<[string]>;

    "getABToken()"(overrides?: CallOverrides): Promise<[string]>;

    getFlow(
      _receiver: string,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber, BigNumber] & {
        timestamp: BigNumber;
        flowRate: BigNumber;
        deposit: BigNumber;
        owedDeposit: BigNumber;
      }
    >;

    "getFlow(address)"(
      _receiver: string,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber, BigNumber] & {
        timestamp: BigNumber;
        flowRate: BigNumber;
        deposit: BigNumber;
        owedDeposit: BigNumber;
      }
    >;

    initStream(
      flowRate: BigNumberish,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "initStream(int96,uint256)"(
      flowRate: BigNumberish,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setABToken(
      _ABToken: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "setABToken(address)"(
      _ABToken: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateStream(
      previousReceiver: string,
      newReceiver: string,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "updateStream(address,address,uint256)"(
      previousReceiver: string,
      newReceiver: string,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  getABRelay(overrides?: CallOverrides): Promise<string>;

  "getABRelay()"(overrides?: CallOverrides): Promise<string>;

  getABToken(overrides?: CallOverrides): Promise<string>;

  "getABToken()"(overrides?: CallOverrides): Promise<string>;

  getFlow(
    _receiver: string,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber, BigNumber, BigNumber] & {
      timestamp: BigNumber;
      flowRate: BigNumber;
      deposit: BigNumber;
      owedDeposit: BigNumber;
    }
  >;

  "getFlow(address)"(
    _receiver: string,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber, BigNumber, BigNumber] & {
      timestamp: BigNumber;
      flowRate: BigNumber;
      deposit: BigNumber;
      owedDeposit: BigNumber;
    }
  >;

  initStream(
    flowRate: BigNumberish,
    tokenId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "initStream(int96,uint256)"(
    flowRate: BigNumberish,
    tokenId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setABToken(
    _ABToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "setABToken(address)"(
    _ABToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateStream(
    previousReceiver: string,
    newReceiver: string,
    tokenId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "updateStream(address,address,uint256)"(
    previousReceiver: string,
    newReceiver: string,
    tokenId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    getABRelay(overrides?: CallOverrides): Promise<string>;

    "getABRelay()"(overrides?: CallOverrides): Promise<string>;

    getABToken(overrides?: CallOverrides): Promise<string>;

    "getABToken()"(overrides?: CallOverrides): Promise<string>;

    getFlow(
      _receiver: string,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber, BigNumber] & {
        timestamp: BigNumber;
        flowRate: BigNumber;
        deposit: BigNumber;
        owedDeposit: BigNumber;
      }
    >;

    "getFlow(address)"(
      _receiver: string,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber, BigNumber] & {
        timestamp: BigNumber;
        flowRate: BigNumber;
        deposit: BigNumber;
        owedDeposit: BigNumber;
      }
    >;

    initStream(
      flowRate: BigNumberish,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "initStream(int96,uint256)"(
      flowRate: BigNumberish,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setABToken(_ABToken: string, overrides?: CallOverrides): Promise<void>;

    "setABToken(address)"(
      _ABToken: string,
      overrides?: CallOverrides
    ): Promise<void>;

    updateStream(
      previousReceiver: string,
      newReceiver: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "updateStream(address,address,uint256)"(
      previousReceiver: string,
      newReceiver: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    getABRelay(overrides?: CallOverrides): Promise<BigNumber>;

    "getABRelay()"(overrides?: CallOverrides): Promise<BigNumber>;

    getABToken(overrides?: CallOverrides): Promise<BigNumber>;

    "getABToken()"(overrides?: CallOverrides): Promise<BigNumber>;

    getFlow(_receiver: string, overrides?: CallOverrides): Promise<BigNumber>;

    "getFlow(address)"(
      _receiver: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    initStream(
      flowRate: BigNumberish,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "initStream(int96,uint256)"(
      flowRate: BigNumberish,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setABToken(
      _ABToken: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "setABToken(address)"(
      _ABToken: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateStream(
      previousReceiver: string,
      newReceiver: string,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "updateStream(address,address,uint256)"(
      previousReceiver: string,
      newReceiver: string,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getABRelay(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getABRelay()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getABToken(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getABToken()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getFlow(
      _receiver: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getFlow(address)"(
      _receiver: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    initStream(
      flowRate: BigNumberish,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "initStream(int96,uint256)"(
      flowRate: BigNumberish,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setABToken(
      _ABToken: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "setABToken(address)"(
      _ABToken: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateStream(
      previousReceiver: string,
      newReceiver: string,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "updateStream(address,address,uint256)"(
      previousReceiver: string,
      newReceiver: string,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
