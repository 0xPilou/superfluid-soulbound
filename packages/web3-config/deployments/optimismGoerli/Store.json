{
  "address": "0x440439043597b06A44aa05D32abA359F8ab6Da7D",
  "abi": [
    {
      "inputs": [],
      "name": "IncorrectItem",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OutOfStock",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "itemId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        }
      ],
      "name": "Redeemed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "itemId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "UpdatedInventory",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "addItem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "items",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nbItems",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_itemId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "setToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_itemId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "updateItem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x5fa7a1e84ed980f38605f6799ad26803211a61cde58249c99fc8c7dee7d43d5f",
  "receipt": {
    "to": null,
    "from": "0x301933aEf6bB308f090087e9075ed5bFcBd3e0B3",
    "contractAddress": "0x440439043597b06A44aa05D32abA359F8ab6Da7D",
    "transactionIndex": 0,
    "gasUsed": "458133",
    "logsBloom": "0x
    "blockHash": "0x338d1278e9280d3af328a6d0d322e312f3043f178a23d3106b17184667155374",
    "transactionHash": "0x5fa7a1e84ed980f38605f6799ad26803211a61cde58249c99fc8c7dee7d43d5f",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 1465523,
        "transactionHash": "0x5fa7a1e84ed980f38605f6799ad26803211a61cde58249c99fc8c7dee7d43d5f",
        "address": "0x440439043597b06A44aa05D32abA359F8ab6Da7D",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000301933aef6bb308f090087e9075ed5bfcbd3e0b3"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x338d1278e9280d3af328a6d0d322e312f3043f178a23d3106b17184667155374"
      }
    ],
    "blockNumber": 1465523,
    "cumulativeGasUsed": "458133",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 17,
  "solcInputHash": "0a8ae1fc96840f42ed90a052036c58d4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"IncorrectItem\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OutOfStock\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"Redeemed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"UpdatedInventory\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"addItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"items\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nbItems\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_itemId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_itemId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"updateItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Store.sol\":\"Store\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Store.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.16;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./interfaces/IABToken.sol\\\";\\n\\ncontract Store is Ownable {\\n  // Token address used for payment\\n\\n  uint256 public nbItems = 0;\\n\\n  address public token;\\n\\n  struct Item {\\n    uint256 quantity;\\n    uint256 price;\\n  }\\n  error OutOfStock();\\n  error IncorrectItem();\\n\\n  mapping(uint256 => Item) public items;\\n\\n  event UpdatedInventory(uint256 itemId, uint256 quantity, uint256 price);\\n  event Redeemed(address buyer, uint256 itemId, uint256 quantity);\\n\\n  function redeem(uint256 _itemId, uint256 _quantity) external {\\n    Item storage item = items[_itemId];\\n\\n    if (item.quantity < _quantity) revert OutOfStock();\\n\\n    IABToken(token).burn(msg.sender, _quantity * item.price);\\n    item.quantity -= _quantity;\\n    emit Redeemed(msg.sender, _itemId, _quantity);\\n  }\\n\\n  function addItem(uint256 _quantity, uint256 _price) external onlyOwner {\\n    Item memory item;\\n    item.quantity = _quantity;\\n    item.price = _price;\\n\\n    items[nbItems] = item;\\n\\n    emit UpdatedInventory(nbItems, _quantity, _price);\\n\\n    nbItems++;\\n  }\\n\\n  function updateItem(\\n    uint256 _itemId,\\n    uint256 _quantity,\\n    uint256 _price\\n  ) external onlyOwner {\\n    if (_itemId >= nbItems) revert IncorrectItem();\\n\\n    Item memory item;\\n    item.quantity = _quantity;\\n    item.price = _price;\\n\\n    items[_itemId] = item;\\n\\n    emit UpdatedInventory(_itemId, _quantity, _price);\\n  }\\n\\n  function setToken(address _token) external onlyOwner {\\n    require(_token != address(0), \\\"zero address\\\");\\n    token = _token;\\n  }\\n}\\n\",\"keccak256\":\"0x6ad0d1c01bb4b9070535dfd6c6f69414eda09aebd5239e226d678e54ec4405aa\",\"license\":\"MIT\"},\"contracts/interfaces/IABToken.sol\":{\"content\":\"// SPDX-License-Identifier: AGPLv3\\npragma solidity ^0.8.16;\\n\\ninterface IABToken {\\n  function mint(address _receiver, uint256 _amount) external;\\n\\n  function burn(address _from, uint256 _amount) external;\\n\\n  function setStore(address _store) external;\\n}\\n\",\"keccak256\":\"0x676f6e765890cb91262d180f02ec5d0b099fa8a9bdc9a1cc4e6e64f273e0400e\",\"license\":\"AGPLv3\"}},\"version\":1}",
  "bytecode": "0x6080604052600060015534801561001557600080fd5b5061001f33610024565b610074565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6106d4806100836000396000f3fe608060405234801561001057600080fd5b506004361061008e5760003560e01c8063144fa6d714610093578063539447d4146100a8578063715018a6146100bb5780637cbc2373146100c35780637d734863146100d65780638da5cb5b146100f2578063a212523214610112578063bfb231d214610125578063f2fde38b14610161578063fc0c546a14610174575b600080fd5b6100a66100a1366004610580565b610187565b005b6100a66100b63660046105b0565b6101fb565b6100a6610287565b6100a66100d13660046105dc565b61029b565b6100df60015481565b6040519081526020015b60405180910390f35b6100fa6103ae565b6040516001600160a01b0390911681526020016100e9565b6100a66101203660046105dc565b6103bd565b61014c6101333660046105fe565b6003602052600090815260409020805460019091015482565b604080519283526020830191909152016100e9565b6100a661016f366004610580565b61043e565b6002546100fa906001600160a01b031681565b61018f6104b7565b6001600160a01b0381166101d95760405162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b60448201526064015b60405180910390fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6102036104b7565b600154831061022557604051636609430360e01b815260040160405180910390fd5b61022d610566565b82815260208082018381526000868152600383526040908190208451815591516001909201919091558051868152918201859052810183905260008051602061067f8339815191529060600160405180910390a150505050565b61028f6104b7565b6102996000610516565b565b600082815260036020526040902080548211156102cb5760405163ade1cb4160e01b815260040160405180910390fd5b60025460018201546001600160a01b0390911690639dc29fac9033906102f1908661062d565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801561033757600080fd5b505af115801561034b573d6000803e3d6000fd5b5050505081816000016000828254610363919061064c565b909155505060408051338152602081018590529081018390527ff3a670cd3af7d64b488926880889d08a8585a138ff455227af6737339a1ec2629060600160405180910390a1505050565b6000546001600160a01b031690565b6103c56104b7565b6103cd610566565b82815260208082018381526001805460009081526003845260409081902085518155925192820192909255548151908152918201859052810183905260008051602061067f8339815191529060600160405180910390a16001805490600061043483610665565b9190505550505050565b6104466104b7565b6001600160a01b0381166104ab5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101d0565b6104b481610516565b50565b336104c06103ae565b6001600160a01b0316146102995760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101d0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604051806040016040528060008152602001600081525090565b60006020828403121561059257600080fd5b81356001600160a01b03811681146105a957600080fd5b9392505050565b6000806000606084860312156105c557600080fd5b505081359360208301359350604090920135919050565b600080604083850312156105ef57600080fd5b50508035926020909101359150565b60006020828403121561061057600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561064757610647610617565b500290565b8181038181111561065f5761065f610617565b92915050565b60006001820161067757610677610617565b506001019056feba08610eb630e5169cc45f7cb0aff657b7ef15d0ea7410ad15f239b7c7640b0aa2646970667358221220a9b32838533fc842eda28b9fe2265ca306f3af79ad701bae150254b2f0a9eebf64736f6c63430008100033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061008e5760003560e01c8063144fa6d714610093578063539447d4146100a8578063715018a6146100bb5780637cbc2373146100c35780637d734863146100d65780638da5cb5b146100f2578063a212523214610112578063bfb231d214610125578063f2fde38b14610161578063fc0c546a14610174575b600080fd5b6100a66100a1366004610580565b610187565b005b6100a66100b63660046105b0565b6101fb565b6100a6610287565b6100a66100d13660046105dc565b61029b565b6100df60015481565b6040519081526020015b60405180910390f35b6100fa6103ae565b6040516001600160a01b0390911681526020016100e9565b6100a66101203660046105dc565b6103bd565b61014c6101333660046105fe565b6003602052600090815260409020805460019091015482565b604080519283526020830191909152016100e9565b6100a661016f366004610580565b61043e565b6002546100fa906001600160a01b031681565b61018f6104b7565b6001600160a01b0381166101d95760405162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b60448201526064015b60405180910390fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6102036104b7565b600154831061022557604051636609430360e01b815260040160405180910390fd5b61022d610566565b82815260208082018381526000868152600383526040908190208451815591516001909201919091558051868152918201859052810183905260008051602061067f8339815191529060600160405180910390a150505050565b61028f6104b7565b6102996000610516565b565b600082815260036020526040902080548211156102cb5760405163ade1cb4160e01b815260040160405180910390fd5b60025460018201546001600160a01b0390911690639dc29fac9033906102f1908661062d565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801561033757600080fd5b505af115801561034b573d6000803e3d6000fd5b5050505081816000016000828254610363919061064c565b909155505060408051338152602081018590529081018390527ff3a670cd3af7d64b488926880889d08a8585a138ff455227af6737339a1ec2629060600160405180910390a1505050565b6000546001600160a01b031690565b6103c56104b7565b6103cd610566565b82815260208082018381526001805460009081526003845260409081902085518155925192820192909255548151908152918201859052810183905260008051602061067f8339815191529060600160405180910390a16001805490600061043483610665565b9190505550505050565b6104466104b7565b6001600160a01b0381166104ab5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101d0565b6104b481610516565b50565b336104c06103ae565b6001600160a01b0316146102995760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101d0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604051806040016040528060008152602001600081525090565b60006020828403121561059257600080fd5b81356001600160a01b03811681146105a957600080fd5b9392505050565b6000806000606084860312156105c557600080fd5b505081359360208301359350604090920135919050565b600080604083850312156105ef57600080fd5b50508035926020909101359150565b60006020828403121561061057600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561064757610647610617565b500290565b8181038181111561065f5761065f610617565b92915050565b60006001820161067757610677610617565b506001019056feba08610eb630e5169cc45f7cb0aff657b7ef15d0ea7410ad15f239b7c7640b0aa2646970667358221220a9b32838533fc842eda28b9fe2265ca306f3af79ad701bae150254b2f0a9eebf64736f6c63430008100033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4901,
        "contract": "contracts/Store.sol:Store",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 12635,
        "contract": "contracts/Store.sol:Store",
        "label": "nbItems",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 12637,
        "contract": "contracts/Store.sol:Store",
        "label": "token",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 12651,
        "contract": "contracts/Store.sol:Store",
        "label": "items",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_struct(Item)12642_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_uint256,t_struct(Item)12642_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Store.Item)",
        "numberOfBytes": "32",
        "value": "t_struct(Item)12642_storage"
      },
      "t_struct(Item)12642_storage": {
        "encoding": "inplace",
        "label": "struct Store.Item",
        "members": [
          {
            "astId": 12639,
            "contract": "contracts/Store.sol:Store",
            "label": "quantity",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 12641,
            "contract": "contracts/Store.sol:Store",
            "label": "price",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}