{
  "address": "0xB216c2e8e3E1Ec2a4244b7F248844D1A254d2aDb",
  "abi": [
    {
      "inputs": [],
      "name": "IncorrectItem",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OutOfStock",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "itemId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        }
      ],
      "name": "Redeemed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "itemId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "UpdatedInventory",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "addItem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "items",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nbItems",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_itemId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "setToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_itemId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "updateItem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xf7f9e96fd263d807059711435687175aaeb1dbe2ba49622091548a5ce37e08e8",
  "receipt": {
    "to": null,
    "from": "0x301933aEf6bB308f090087e9075ed5bFcBd3e0B3",
    "contractAddress": "0xB216c2e8e3E1Ec2a4244b7F248844D1A254d2aDb",
    "transactionIndex": 0,
    "gasUsed": "824239",
    "logsBloom": "0x
    "blockHash": "0xe237835f0f2db0b05de00ca68af28aae039ba3fa0dea0c9809f032076cff7c3e",
    "transactionHash": "0xf7f9e96fd263d807059711435687175aaeb1dbe2ba49622091548a5ce37e08e8",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 1236841,
        "transactionHash": "0xf7f9e96fd263d807059711435687175aaeb1dbe2ba49622091548a5ce37e08e8",
        "address": "0xB216c2e8e3E1Ec2a4244b7F248844D1A254d2aDb",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000301933aef6bb308f090087e9075ed5bfcbd3e0b3"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xe237835f0f2db0b05de00ca68af28aae039ba3fa0dea0c9809f032076cff7c3e"
      }
    ],
    "blockNumber": 1236841,
    "cumulativeGasUsed": "824239",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 9,
  "solcInputHash": "405afd8554523619462251b9644de85f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"IncorrectItem\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OutOfStock\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"Redeemed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"UpdatedInventory\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"addItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"items\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nbItems\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_itemId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_itemId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"updateItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Store.sol\":\"Store\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Store.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.14;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./interfaces/ISuperSoulbound.sol\\\";\\n\\ncontract Store is Ownable {\\n  // Token address used for payment\\n  address public token;\\n\\n  uint256 public nbItems = 0;\\n\\n  struct Item {\\n    uint256 quantity;\\n    uint256 price;\\n  }\\n  error OutOfStock();\\n  error IncorrectItem();\\n\\n  mapping(uint256 => Item) public items;\\n\\n  event UpdatedInventory(uint256 itemId, uint256 quantity, uint256 price);\\n  event Redeemed(address buyer, uint256 itemId, uint256 quantity);\\n\\n  function redeem(uint256 _itemId, uint256 _quantity) external {\\n    Item storage item = items[_itemId];\\n\\n    if (item.quantity < _quantity) revert OutOfStock();\\n\\n    ISuperSoulbound(token).burn(msg.sender, _quantity * item.price, \\\"0x\\\");\\n    item.quantity -= _quantity;\\n    emit Redeemed(msg.sender, _itemId, _quantity);\\n  }\\n\\n  function addItem(uint256 _quantity, uint256 _price) external onlyOwner {\\n    Item memory item;\\n    item.quantity = _quantity;\\n    item.price = _price;\\n\\n    items[nbItems] = item;\\n\\n    emit UpdatedInventory(nbItems, _quantity, _price);\\n\\n    nbItems++;\\n  }\\n\\n  function updateItem(\\n    uint256 _itemId,\\n    uint256 _quantity,\\n    uint256 _price\\n  ) external onlyOwner {\\n    if (_itemId >= nbItems) revert IncorrectItem();\\n\\n    Item memory item;\\n    item.quantity = _quantity;\\n    item.price = _price;\\n\\n    items[_itemId] = item;\\n\\n    emit UpdatedInventory(_itemId, _quantity, _price);\\n  }\\n\\n  function setToken(address _token) external onlyOwner {\\n    require(_token != address(0), \\\"zero address\\\");\\n    token = _token;\\n  }\\n}\\n\",\"keccak256\":\"0x78c98894dd3fb665ff468d4ecdc70452ad832fff43714467b9cc215200c60d3c\",\"license\":\"MIT\"},\"contracts/interfaces/ISuperSoulbound.sol\":{\"content\":\"// SPDX-License-Identifier: AGPLv3\\npragma solidity ^0.8.14;\\n\\ninterface ISuperSoulbound {\\n  /// @notice Mints tokens, only the owner may do this\\n  /// @param receiver Receiver of minted tokens\\n  /// @param amount Amount to mint\\n  function mint(\\n    address receiver,\\n    uint256 amount,\\n    bytes memory userData\\n  ) external;\\n\\n  /// @notice Burns from message sender\\n  /// @param amount Amount to burn\\n  function burn(\\n    address _from,\\n    uint256 amount,\\n    bytes memory userData\\n  ) external;\\n\\n  function setStore(address _store) external;\\n}\\n\",\"keccak256\":\"0xb452d6630b7ebb856fed6cd50313d9ac50ce68ba7cac0de2b0f42386e6131c93\",\"license\":\"AGPLv3\"}},\"version\":1}",
  "bytecode": "0x6080604052600060025534801561001557600080fd5b5061003261002761003760201b60201c565b61003f60201b60201c565b610103565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610d77806101126000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b1461011f578063a21252321461013d578063bfb231d214610159578063f2fde38b1461018a578063fc0c546a146101a65761009e565b8063144fa6d7146100a3578063539447d4146100bf578063715018a6146100db5780637cbc2373146100e55780637d73486314610101575b600080fd5b6100bd60048036038101906100b8919061081a565b6101c4565b005b6100d960048036038101906100d4919061087d565b61027f565b005b6100e361034a565b005b6100ff60048036038101906100fa91906108d0565b61035e565b005b6101096104ac565b604051610116919061091f565b60405180910390f35b6101276104b2565b6040516101349190610949565b60405180910390f35b610157600480360381019061015291906108d0565b6104db565b005b610173600480360381019061016e9190610964565b610586565b604051610181929190610991565b60405180910390f35b6101a4600480360381019061019f919061081a565b6105aa565b005b6101ae61062d565b6040516101bb9190610949565b60405180910390f35b6101cc610653565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361023b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023290610a17565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610287610653565b60025483106102c2576040517f6609430300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102ca61079d565b8281600001818152505081816020018181525050806003600086815260200190815260200160002060008201518160000155602082015181600101559050507fba08610eb630e5169cc45f7cb0aff657b7ef15d0ea7410ad15f239b7c7640b0a84848460405161033c93929190610a37565b60405180910390a150505050565b610352610653565b61035c60006106d1565b565b600060036000848152602001908152602001600020905081816000015410156103b3576040517fade1cb4100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166344d17187338360010154856104029190610a9d565b6040518363ffffffff1660e01b815260040161041f929190610b54565b600060405180830381600087803b15801561043957600080fd5b505af115801561044d573d6000803e3d6000fd5b50505050818160000160008282546104659190610b90565b925050819055507ff3a670cd3af7d64b488926880889d08a8585a138ff455227af6737339a1ec26233848460405161049f93929190610bc4565b60405180910390a1505050565b60025481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104e3610653565b6104eb61079d565b82816000018181525050818160200181815250508060036000600254815260200190815260200160002060008201518160000155602082015181600101559050507fba08610eb630e5169cc45f7cb0aff657b7ef15d0ea7410ad15f239b7c7640b0a600254848460405161056193929190610a37565b60405180910390a16002600081548092919061057c90610bfb565b9190505550505050565b60036020528060005260406000206000915090508060000154908060010154905082565b6105b2610653565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610621576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061890610cb5565b60405180910390fd5b61062a816106d1565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61065b610795565b73ffffffffffffffffffffffffffffffffffffffff166106796104b2565b73ffffffffffffffffffffffffffffffffffffffff16146106cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c690610d21565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b604051806040016040528060008152602001600081525090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107e7826107bc565b9050919050565b6107f7816107dc565b811461080257600080fd5b50565b600081359050610814816107ee565b92915050565b6000602082840312156108305761082f6107b7565b5b600061083e84828501610805565b91505092915050565b6000819050919050565b61085a81610847565b811461086557600080fd5b50565b60008135905061087781610851565b92915050565b600080600060608486031215610896576108956107b7565b5b60006108a486828701610868565b93505060206108b586828701610868565b92505060406108c686828701610868565b9150509250925092565b600080604083850312156108e7576108e66107b7565b5b60006108f585828601610868565b925050602061090685828601610868565b9150509250929050565b61091981610847565b82525050565b60006020820190506109346000830184610910565b92915050565b610943816107dc565b82525050565b600060208201905061095e600083018461093a565b92915050565b60006020828403121561097a576109796107b7565b5b600061098884828501610868565b91505092915050565b60006040820190506109a66000830185610910565b6109b36020830184610910565b9392505050565b600082825260208201905092915050565b7f7a65726f20616464726573730000000000000000000000000000000000000000600082015250565b6000610a01600c836109ba565b9150610a0c826109cb565b602082019050919050565b60006020820190508181036000830152610a30816109f4565b9050919050565b6000606082019050610a4c6000830186610910565b610a596020830185610910565b610a666040830184610910565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610aa882610847565b9150610ab383610847565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610aec57610aeb610a6e565b5b828202905092915050565b600082825260208201905092915050565b7f3078000000000000000000000000000000000000000000000000000000000000600082015250565b6000610b3e600283610af7565b9150610b4982610b08565b602082019050919050565b6000606082019050610b69600083018561093a565b610b766020830184610910565b8181036040830152610b8781610b31565b90509392505050565b6000610b9b82610847565b9150610ba683610847565b925082821015610bb957610bb8610a6e565b5b828203905092915050565b6000606082019050610bd9600083018661093a565b610be66020830185610910565b610bf36040830184610910565b949350505050565b6000610c0682610847565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c3857610c37610a6e565b5b600182019050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610c9f6026836109ba565b9150610caa82610c43565b604082019050919050565b60006020820190508181036000830152610cce81610c92565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610d0b6020836109ba565b9150610d1682610cd5565b602082019050919050565b60006020820190508181036000830152610d3a81610cfe565b905091905056fea26469706673582212205a2938fd17e5db837575efdf7d331f454aa92758220af5a50559372e5b00a6ed64736f6c634300080e0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b1461011f578063a21252321461013d578063bfb231d214610159578063f2fde38b1461018a578063fc0c546a146101a65761009e565b8063144fa6d7146100a3578063539447d4146100bf578063715018a6146100db5780637cbc2373146100e55780637d73486314610101575b600080fd5b6100bd60048036038101906100b8919061081a565b6101c4565b005b6100d960048036038101906100d4919061087d565b61027f565b005b6100e361034a565b005b6100ff60048036038101906100fa91906108d0565b61035e565b005b6101096104ac565b604051610116919061091f565b60405180910390f35b6101276104b2565b6040516101349190610949565b60405180910390f35b610157600480360381019061015291906108d0565b6104db565b005b610173600480360381019061016e9190610964565b610586565b604051610181929190610991565b60405180910390f35b6101a4600480360381019061019f919061081a565b6105aa565b005b6101ae61062d565b6040516101bb9190610949565b60405180910390f35b6101cc610653565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361023b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023290610a17565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610287610653565b60025483106102c2576040517f6609430300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102ca61079d565b8281600001818152505081816020018181525050806003600086815260200190815260200160002060008201518160000155602082015181600101559050507fba08610eb630e5169cc45f7cb0aff657b7ef15d0ea7410ad15f239b7c7640b0a84848460405161033c93929190610a37565b60405180910390a150505050565b610352610653565b61035c60006106d1565b565b600060036000848152602001908152602001600020905081816000015410156103b3576040517fade1cb4100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166344d17187338360010154856104029190610a9d565b6040518363ffffffff1660e01b815260040161041f929190610b54565b600060405180830381600087803b15801561043957600080fd5b505af115801561044d573d6000803e3d6000fd5b50505050818160000160008282546104659190610b90565b925050819055507ff3a670cd3af7d64b488926880889d08a8585a138ff455227af6737339a1ec26233848460405161049f93929190610bc4565b60405180910390a1505050565b60025481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104e3610653565b6104eb61079d565b82816000018181525050818160200181815250508060036000600254815260200190815260200160002060008201518160000155602082015181600101559050507fba08610eb630e5169cc45f7cb0aff657b7ef15d0ea7410ad15f239b7c7640b0a600254848460405161056193929190610a37565b60405180910390a16002600081548092919061057c90610bfb565b9190505550505050565b60036020528060005260406000206000915090508060000154908060010154905082565b6105b2610653565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610621576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061890610cb5565b60405180910390fd5b61062a816106d1565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61065b610795565b73ffffffffffffffffffffffffffffffffffffffff166106796104b2565b73ffffffffffffffffffffffffffffffffffffffff16146106cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c690610d21565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b604051806040016040528060008152602001600081525090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107e7826107bc565b9050919050565b6107f7816107dc565b811461080257600080fd5b50565b600081359050610814816107ee565b92915050565b6000602082840312156108305761082f6107b7565b5b600061083e84828501610805565b91505092915050565b6000819050919050565b61085a81610847565b811461086557600080fd5b50565b60008135905061087781610851565b92915050565b600080600060608486031215610896576108956107b7565b5b60006108a486828701610868565b93505060206108b586828701610868565b92505060406108c686828701610868565b9150509250925092565b600080604083850312156108e7576108e66107b7565b5b60006108f585828601610868565b925050602061090685828601610868565b9150509250929050565b61091981610847565b82525050565b60006020820190506109346000830184610910565b92915050565b610943816107dc565b82525050565b600060208201905061095e600083018461093a565b92915050565b60006020828403121561097a576109796107b7565b5b600061098884828501610868565b91505092915050565b60006040820190506109a66000830185610910565b6109b36020830184610910565b9392505050565b600082825260208201905092915050565b7f7a65726f20616464726573730000000000000000000000000000000000000000600082015250565b6000610a01600c836109ba565b9150610a0c826109cb565b602082019050919050565b60006020820190508181036000830152610a30816109f4565b9050919050565b6000606082019050610a4c6000830186610910565b610a596020830185610910565b610a666040830184610910565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610aa882610847565b9150610ab383610847565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610aec57610aeb610a6e565b5b828202905092915050565b600082825260208201905092915050565b7f3078000000000000000000000000000000000000000000000000000000000000600082015250565b6000610b3e600283610af7565b9150610b4982610b08565b602082019050919050565b6000606082019050610b69600083018561093a565b610b766020830184610910565b8181036040830152610b8781610b31565b90509392505050565b6000610b9b82610847565b9150610ba683610847565b925082821015610bb957610bb8610a6e565b5b828203905092915050565b6000606082019050610bd9600083018661093a565b610be66020830185610910565b610bf36040830184610910565b949350505050565b6000610c0682610847565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c3857610c37610a6e565b5b600182019050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610c9f6026836109ba565b9150610caa82610c43565b604082019050919050565b60006020820190508181036000830152610cce81610c92565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610d0b6020836109ba565b9150610d1682610cd5565b602082019050919050565b60006020820190508181036000830152610d3a81610cfe565b905091905056fea26469706673582212205a2938fd17e5db837575efdf7d331f454aa92758220af5a50559372e5b00a6ed64736f6c634300080e0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4901,
        "contract": "contracts/Store.sol:Store",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 11355,
        "contract": "contracts/Store.sol:Store",
        "label": "token",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 11358,
        "contract": "contracts/Store.sol:Store",
        "label": "nbItems",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 11372,
        "contract": "contracts/Store.sol:Store",
        "label": "items",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_struct(Item)11363_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_uint256,t_struct(Item)11363_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Store.Item)",
        "numberOfBytes": "32",
        "value": "t_struct(Item)11363_storage"
      },
      "t_struct(Item)11363_storage": {
        "encoding": "inplace",
        "label": "struct Store.Item",
        "members": [
          {
            "astId": 11360,
            "contract": "contracts/Store.sol:Store",
            "label": "quantity",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 11362,
            "contract": "contracts/Store.sol:Store",
            "label": "price",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}